{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\riadd\\\\Documents\\\\GitHub\\\\SuperpowerDM\\\\frontend\\\\superpowerdm\\\\src\\\\Components\\\\cards.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// const defaultData = [];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultData = [{\n  id: '18068242561455354',\n  imageUrl: 'https://picsum.photos/id/237/1080/1080',\n  date: '2023-12-09T21:35:36+0000',\n  username: 'user1',\n  comments: [{\n    username: 'commenter1',\n    text: 'Great post!'\n  }, {\n    username: 'commenter2',\n    text: 'Love this!'\n  }]\n}, {\n  id: '17988767471580842',\n  imageUrl: 'https://picsum.photos/id/7/1080/1920',\n  date: '2023-12-09T21:32:54+0000',\n  username: 'user2',\n  comments: [{\n    username: 'commenter3',\n    text: 'Amazing content!'\n  }, {\n    username: 'commenter4',\n    text: 'Really nice picture.'\n  }]\n}, {\n  id: '17906410409793067',\n  imageUrl: 'https://picsum.photos/id/63/1080/1080',\n  date: '2023-11-16T14:51:08+0000',\n  username: 'user3',\n  comments: [{\n    username: 'commenter5',\n    text: 'This is awesome!'\n  }]\n}, {\n  id: '17987706869244506',\n  imageUrl: 'https://picsum.photos/id/16/1080/1920',\n  date: '2023-11-03T16:16:05+0000',\n  username: 'user4',\n  comments: [{\n    username: 'commenter1',\n    text: 'I like this post a lot.'\n  }, {\n    username: 'commenter7',\n    text: 'Great job!'\n  }, {\n    username: 'commenter8',\n    text: 'Very cool!'\n  }]\n}, {\n  id: '18233445566789012',\n  imageUrl: 'https://picsum.photos/id/5/1080/1080',\n  date: '2023-10-25T10:30:21+0000',\n  username: 'user5',\n  comments: [{\n    username: 'commenter9',\n    text: 'Superb!'\n  }, {\n    username: 'commenter10',\n    text: 'Inspiring work.'\n  }]\n}, {\n  id: '17654367890987654',\n  imageUrl: 'https://picsum.photos/id/59/1080/1080',\n  date: '2023-10-20T08:15:45+0000',\n  username: 'user6',\n  comments: [{\n    username: 'commenter11',\n    text: 'Fantastic!'\n  }, {\n    username: 'commenter12',\n    text: 'Wow, this is great!'\n  }]\n}];\nconst CardComponent = ({\n  maxCards\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [data, setData] = useState(() => {\n    const savedData = localStorage.getItem('defaultData');\n    return savedData ? JSON.parse(savedData) : [];\n  });\n  const [displayedComments, setDisplayedComments] = useState({});\n  const [activeCard, setActiveCard] = useState(null);\n  const fetchMedia = async () => {\n    try {\n      const response = await fetch('/fetch_media', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const jsonData = await response.json();\n      const transformedData = jsonData.map(item => ({\n        imageUrl: item.media_url,\n        date: item.timestamp,\n        id: item.id,\n        username: item.username,\n        comments: [] // Initialize comments as an empty array\n      }));\n\n      // Update state and save to localStorage\n      setData(prevData => {\n        const updatedData = [...prevData, ...transformedData];\n        localStorage.setItem('defaultData', JSON.stringify(updatedData));\n        return updatedData;\n      });\n    } catch (error) {\n      console.error('Error fetching media:', error);\n    }\n  };\n  const fetchComments = async (mediaId, username) => {\n    try {\n      const response = await fetch('/fetch_comments', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          media_id: mediaId,\n          username: username\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const comments = await response.json();\n      setDisplayedComments({\n        [mediaId]: comments\n      });\n      setData(prevData => {\n        return prevData.map(item => {\n          if (item.id === mediaId) {\n            return {\n              ...item,\n              comments: comments\n            };\n          }\n          return item;\n        });\n      });\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n    }\n  };\n  const handleCardButtonClick = card => {\n    setActiveCard(card); // Set the active card\n  };\n\n  const closeDetailScreen = () => {\n    setActiveCard(null); // Reset the active card\n  };\n\n  // Check if data is empty, and if so, use defaultData\n  const effectiveData = data.length === 0 ? defaultData : data;\n  // Determine the number of cards to display\n  const numCardsToShow = maxCards || effectiveData.length;\n  // Slice the data to limit the number of cards if necessary\n  const limitedData = effectiveData.slice(0, numCardsToShow);\n  const DetailScreen = ({\n    activeCard,\n    closeDetailScreen\n  }) => {\n    _s();\n    const [selectedComment, setSelectedComment] = useState(null);\n    const [showFullComment, setShowFullComment] = useState(false);\n    const [draftReply, setDraftReply] = useState(\"\");\n    const selectComment = comment => {\n      setSelectedComment(comment);\n      setShowFullComment(false);\n      setDraftReply(\"\"); // Reset draft reply when a new comment is selected\n    };\n\n    const handleShowMore = () => {\n      setShowFullComment(true);\n    };\n    const handleDraftChange = e => {\n      setDraftReply(e.target.value);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Post from \", activeCard.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-image-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: activeCard.imageUrl,\n            alt: \"Post\",\n            className: \"post-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-image-text\",\n            children: \"Some text next to the image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-counter\",\n            children: [activeCard.comments.length, \" comments replied to\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"circle-button\",\n            onClick: closeDetailScreen,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/Assets/reload.png\",\n              className: \"reload\",\n              alt: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 11\n          }, this), activeCard.comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `comment-item ${selectedComment === comment ? 'highlighted' : ''}`,\n            onClick: () => selectComment(comment),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: comment.userImage,\n              alt: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-username\",\n              children: [\"@\", comment.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"separator\",\n              children: \"| \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-text\",\n              children: comment.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-detail\",\n          children: selectedComment ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Detail View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [selectedComment.username, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 20\n              }, this), \" \", selectedComment.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select a comment to view details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this);\n  };\n  _s(DetailScreen, \"0ukvYMNEzNtNJcMqFVVwWbzfwZ0=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: activeCard ? /*#__PURE__*/_jsxDEV(DetailScreen, {\n      activeCard: activeCard,\n      closeDetailScreen: closeDetailScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"refresh-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchMedia,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" Refresh feed \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/Assets/refresh_red.png\",\n            className: \"reload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tooltip\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tooltip-icon\",\n            children: \"?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tooltip-text\",\n            children: \"A process is a set of structured activities and tasks performed to achieve a specific goal.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }, this), limitedData.length > 0 ? limitedData.map((item, index) => {\n        var _item$comments;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"counter-box\",\n              children: ((_item$comments = item.comments) === null || _item$comments === void 0 ? void 0 : _item$comments.length) || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" Comments replied \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"circle-button\",\n              onClick: () => fetchComments(item.id, item.username),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/Assets/reload.png\",\n                className: \"reload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.imageUrl,\n              alt: \"Post\",\n              className: \"card-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Post Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-date\",\n                  children: item.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"card-button\",\n                onClick: () => handleCardButtonClick(item),\n                children: [\"Review \", item.comments.length, \" Draft Replies >\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, item.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No content!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your content will appear here when available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"path_to_your_image.jpg\",\n          alt: \"Descriptive Alt Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchMedia,\n          children: \"Get Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s2(CardComponent, \"5Cy2dwl/O+hEooJKJ3ml7JKc/7E=\");\n_c = CardComponent;\nexport default CardComponent;\nvar _c;\n$RefreshReg$(_c, \"CardComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultData","id","imageUrl","date","username","comments","text","CardComponent","maxCards","_s2","_s","$RefreshSig$","data","setData","savedData","localStorage","getItem","JSON","parse","displayedComments","setDisplayedComments","activeCard","setActiveCard","fetchMedia","response","fetch","method","headers","ok","Error","status","jsonData","json","transformedData","map","item","media_url","timestamp","prevData","updatedData","setItem","stringify","error","console","fetchComments","mediaId","body","media_id","handleCardButtonClick","card","closeDetailScreen","effectiveData","length","numCardsToShow","limitedData","slice","DetailScreen","selectedComment","setSelectedComment","showFullComment","setShowFullComment","draftReply","setDraftReply","selectComment","comment","handleShowMore","handleDraftChange","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","index","userImage","_item$comments","_c","$RefreshReg$"],"sources":["C:/Users/riadd/Documents/GitHub/SuperpowerDM/frontend/superpowerdm/src/Components/cards.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// const defaultData = [];\r\n\r\nconst defaultData = [\r\n  {\r\n    id: '18068242561455354',\r\n    imageUrl: 'https://picsum.photos/id/237/1080/1080',\r\n    date: '2023-12-09T21:35:36+0000',\r\n    username: 'user1',\r\n    comments: [\r\n      { username: 'commenter1', text: 'Great post!' },\r\n      { username: 'commenter2', text: 'Love this!' }\r\n    ]\r\n  },\r\n  {\r\n    id: '17988767471580842',\r\n    imageUrl: 'https://picsum.photos/id/7/1080/1920',\r\n    date: '2023-12-09T21:32:54+0000',\r\n    username: 'user2',\r\n    comments: [\r\n      { username: 'commenter3', text: 'Amazing content!' },\r\n      { username: 'commenter4', text: 'Really nice picture.' }\r\n    ]\r\n  },\r\n  {\r\n    id: '17906410409793067',\r\n    imageUrl: 'https://picsum.photos/id/63/1080/1080',\r\n    date: '2023-11-16T14:51:08+0000',\r\n    username: 'user3',\r\n    comments: [\r\n      { username: 'commenter5', text: 'This is awesome!' }\r\n    ]\r\n  },\r\n  {\r\n    id: '17987706869244506',\r\n    imageUrl: 'https://picsum.photos/id/16/1080/1920',\r\n    date: '2023-11-03T16:16:05+0000',\r\n    username: 'user4',\r\n    comments: [\r\n      { username: 'commenter1', text: 'I like this post a lot.' },\r\n      { username: 'commenter7', text: 'Great job!' },\r\n      { username: 'commenter8', text: 'Very cool!' }\r\n    ]\r\n  },\r\n  {\r\n    id: '18233445566789012',\r\n    imageUrl: 'https://picsum.photos/id/5/1080/1080',\r\n    date: '2023-10-25T10:30:21+0000',\r\n    username: 'user5',\r\n    comments: [\r\n      { username: 'commenter9', text: 'Superb!' },\r\n      { username: 'commenter10', text: 'Inspiring work.' }\r\n    ]\r\n  },\r\n  {\r\n    id: '17654367890987654',\r\n    imageUrl: 'https://picsum.photos/id/59/1080/1080',\r\n    date: '2023-10-20T08:15:45+0000',\r\n    username: 'user6',\r\n    comments: [\r\n      { username: 'commenter11', text: 'Fantastic!' },\r\n      { username: 'commenter12', text: 'Wow, this is great!' }\r\n    ]\r\n  }\r\n];\r\n\r\n\r\nconst CardComponent = ({maxCards}) => {\r\n  const [data, setData] = useState(() => {\r\n    const savedData = localStorage.getItem('defaultData');\r\n    return savedData ? JSON.parse(savedData) : [];\r\n  });\r\n\r\n  const [displayedComments, setDisplayedComments] = useState({});\r\n  const [activeCard, setActiveCard] = useState(null);\r\n\r\n  const fetchMedia = async () => {\r\n    try {\r\n      const response = await fetch('/fetch_media', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n\r\n      const jsonData = await response.json();\r\n      const transformedData = jsonData.map(item => ({\r\n        imageUrl: item.media_url,\r\n        date: item.timestamp,\r\n        id: item.id,\r\n        username: item.username,\r\n        comments: [] // Initialize comments as an empty array\r\n      }));\r\n\r\n      // Update state and save to localStorage\r\n      setData(prevData => {\r\n        const updatedData = [...prevData, ...transformedData];\r\n        localStorage.setItem('defaultData', JSON.stringify(updatedData));\r\n        return updatedData;\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching media:', error);\r\n    }\r\n  };\r\n\r\n  const fetchComments = async (mediaId, username) => {\r\n    try {\r\n      const response = await fetch('/fetch_comments', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ media_id: mediaId, username: username })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n\r\n      const comments = await response.json();\r\n      setDisplayedComments({ [mediaId]: comments });\r\n      setData(prevData => {\r\n        return prevData.map(item => {\r\n          if (item.id === mediaId) {\r\n            return { ...item, comments: comments };\r\n          }\r\n          return item;\r\n        });\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching comments:', error);\r\n    }\r\n  };\r\n\r\n  const handleCardButtonClick = (card) => {\r\n    setActiveCard(card); // Set the active card\r\n  };\r\n  const closeDetailScreen = () => {\r\n    setActiveCard(null); // Reset the active card\r\n  };\r\n  \r\n  // Check if data is empty, and if so, use defaultData\r\n  const effectiveData = data.length === 0 ? defaultData : data;\r\n  // Determine the number of cards to display\r\n  const numCardsToShow = maxCards || effectiveData.length;\r\n  // Slice the data to limit the number of cards if necessary\r\n  const limitedData = effectiveData.slice(0, numCardsToShow);\r\n\r\n  const DetailScreen = ({ activeCard, closeDetailScreen }) => {\r\n    const [selectedComment, setSelectedComment] = useState(null);\r\n    const [showFullComment, setShowFullComment] = useState(false);\r\n    const [draftReply, setDraftReply] = useState(\"\");\r\n  \r\n    const selectComment = (comment) => {\r\n      setSelectedComment(comment);\r\n      setShowFullComment(false);\r\n      setDraftReply(\"\"); // Reset draft reply when a new comment is selected\r\n    };\r\n\r\n    const handleShowMore = () => {\r\n      setShowFullComment(true);\r\n    };\r\n  \r\n    const handleDraftChange = (e) => {\r\n      setDraftReply(e.target.value);\r\n    };\r\n  \r\n    return (\r\n      <div className=\"detail-screen\">\r\n        <div className=\"comment-header\">\r\n          <h2>Post from {activeCard.date}</h2>\r\n          <div className=\"post-image-container\">\r\n            <img src={activeCard.imageUrl} alt=\"Post\" className=\"post-image\" />\r\n            <div className=\"post-image-text\">Some text next to the image</div>\r\n          </div>\r\n          <div className=\"comment-info\">\r\n            <div className=\"comment-counter\">{activeCard.comments.length} comments replied to</div>\r\n            <button className=\"circle-button\" onClick={closeDetailScreen}>\r\n              <img src=\"/Assets/reload.png\" className=\"reload\" alt=\"Close\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"content-body\">\r\n        <div className=\"comments-list\">\r\n          <h3>Comments</h3>\r\n          {activeCard.comments.map((comment, index) => (\r\n            <div key={index} className={`comment-item ${selectedComment === comment ? 'highlighted' : ''}`}\r\n                onClick={() => selectComment(comment)}>\r\n              <img src={comment.userImage} alt=\"User\" />\r\n              <div className=\"comment-username\">@{comment.username}</div>\r\n              <div className=\"separator\">| </div>\r\n              <div className=\"comment-text\">{comment.text}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n          <div className=\"comment-detail\">\r\n            {selectedComment ? (\r\n              <>\r\n                <h3>Detail View</h3>\r\n                <p><strong>{selectedComment.username}:</strong> {selectedComment.text}</p>\r\n              </>\r\n            ) : (\r\n              <p>Select a comment to view details</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      {activeCard ? (\r\n        <DetailScreen activeCard={activeCard} closeDetailScreen={closeDetailScreen} />\r\n      ) : (\r\n      <div className=\"card-container\">\r\n      <div className=\"refresh-button\">\r\n          <button onClick={fetchMedia}>\r\n          <span> Refresh feed </span>\r\n          <img src=\"/Assets/refresh_red.png\" className=\"reload\" />\r\n          </button>\r\n          <div className=\"tooltip\">\r\n                  <span className=\"tooltip-icon\">?</span>\r\n                  <span className=\"tooltip-text\">A process is a set of structured activities and tasks performed to achieve a specific goal.</span>\r\n          </div>\r\n      </div>\r\n        {limitedData.length > 0 ? limitedData.map((item, index) => (\r\n          <div key={item.id || index} className=\"card\">\r\n            {/* Card Header */}\r\n            <div className=\"card-header\">\r\n            <span className=\"counter-box\">{item.comments?.length || 0}</span>\r\n              <h2> Comments replied </h2>\r\n              <button className=\"circle-button\" onClick={() => fetchComments(item.id, item.username)}>\r\n                <img src=\"/Assets/reload.png\" className=\"reload\" />\r\n              </button>\r\n            </div>\r\n            {/* Card Content */}\r\n            <div className=\"card-content\">\r\n              {/* Image on the left */}\r\n              <img src={item.imageUrl} alt=\"Post\" className=\"card-image\" />\r\n\r\n              {/* Text and Button on the right */}\r\n              <div className=\"card-text\">\r\n                <div>\r\n                  <h4>Post Date:</h4>\r\n                  <p className=\"card-date\">{item.date}</p>\r\n                </div>\r\n                <button className=\"card-button\" onClick={() => handleCardButtonClick(item)}>\r\n                    Review {item.comments.length} Draft Replies >\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )) : (\r\n          <div className=\"empty-screen\">\r\n            <h1>No content!</h1>\r\n            <p>Your content will appear here when available.</p>\r\n            <img src=\"path_to_your_image.jpg\" alt=\"Descriptive Alt Text\" />\r\n            <button onClick={fetchMedia}>Get Content</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}