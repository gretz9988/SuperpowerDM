{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\riadd\\\\Documents\\\\GitHub\\\\SuperpowerDM\\\\frontend\\\\superpowerdm\\\\src\\\\Components\\\\OnBoarding.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './OnBoarding.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction OnBoarding() {\n  _s();\n  const [screen, setScreen] = useState(1);\n  const [fade, setFade] = useState(true);\n  const nextScreen = () => {\n    setFade(false); // Trigger fade out\n\n    setTimeout(() => {\n      setScreen(screen => screen === 4 ? 1 : screen + 1);\n      setFade(true); // Trigger fade in\n    }, 500); // This duration should match the CSS transition duration\n  };\n\n  useEffect(() => {\n    setFade(true);\n  }, []);\n  const renderScreen = () => {\n    let screenContent;\n    let imageUrl;\n    switch (screen) {\n      case 1:\n        screenContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Screen 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is the content of the first screen.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n        imageUrl = '/Assets/imageForScreen1.png';\n        break;\n      case 2:\n        screenContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Screen 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is the content of the second screen.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n        imageUrl = '/Assets/imageForScreen2.png';\n        break;\n      // ... cases for other screens\n      default:\n        screenContent = null;\n        imageUrl = '';\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"onboarding\",\n      children: [renderScreen(), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nextScreen(),\n        children: \"Go to Next Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/Assets/blackFullLogo.png\",\n        alt: \"Superpower Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  };\n}\n_s(OnBoarding, \"knNzga7CFeT2YZ5viF4jYk55ehU=\");\n_c = OnBoarding;\nexport default OnBoarding;\nvar _c;\n$RefreshReg$(_c, \"OnBoarding\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","OnBoarding","_s","screen","setScreen","fade","setFade","nextScreen","setTimeout","renderScreen","screenContent","imageUrl","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/riadd/Documents/GitHub/SuperpowerDM/frontend/superpowerdm/src/Components/OnBoarding.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './OnBoarding.css';\r\n\r\nfunction OnBoarding() {\r\n  const [screen, setScreen] = useState(1);\r\n  const [fade, setFade] = useState(true);\r\n\r\n  const nextScreen = () => {\r\n    setFade(false); // Trigger fade out\r\n\r\n    setTimeout(() => {\r\n      setScreen(screen => (screen === 4 ? 1 : screen + 1));\r\n      setFade(true); // Trigger fade in\r\n    }, 500); // This duration should match the CSS transition duration\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFade(true);\r\n  }, []);\r\n\r\n  const renderScreen = () => {\r\n    let screenContent;\r\n    let imageUrl;\r\n  \r\n    switch (screen) {\r\n      case 1:\r\n        screenContent = (\r\n          <>\r\n            <h1>Screen 1</h1>\r\n            <p>This is the content of the first screen.</p>\r\n            {/* Add more content specific to Screen 1 here */}\r\n          </>\r\n        );\r\n        imageUrl = '/Assets/imageForScreen1.png';\r\n        break;\r\n      case 2:\r\n        screenContent = (\r\n          <>\r\n            <h1>Screen 2</h1>\r\n            <p>This is the content of the second screen.</p>\r\n            {/* Add more content specific to Screen 2 here */}\r\n          </>\r\n        );\r\n        imageUrl = '/Assets/imageForScreen2.png';\r\n        break;\r\n      // ... cases for other screens\r\n      default:\r\n        screenContent = null;\r\n        imageUrl = '';\r\n    }\r\n  \r\n    return (\r\n      <div className=\"onboarding\">\r\n          {renderScreen()}\r\n          <button onClick={() => nextScreen()}>Go to Next Screen</button>\r\n          <img src=\"/Assets/blackFullLogo.png\" alt=\"Superpower Logo\" />\r\n      </div>\r\n  );\r\n  };\r\n}\r\n\r\nexport default OnBoarding;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMc,UAAU,GAAGA,CAAA,KAAM;IACvBD,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;;IAEhBE,UAAU,CAAC,MAAM;MACfJ,SAAS,CAACD,MAAM,IAAKA,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGA,MAAM,GAAG,CAAE,CAAC;MACpDG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACjB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACX,CAAC;;EAEDZ,SAAS,CAAC,MAAM;IACdY,OAAO,CAAC,IAAI,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIC,aAAa;IACjB,IAAIC,QAAQ;IAEZ,QAAQR,MAAM;MACZ,KAAK,CAAC;QACJO,aAAa,gBACXZ,OAAA,CAAAE,SAAA;UAAAY,QAAA,gBACEd,OAAA;YAAAc,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBlB,OAAA;YAAAc,QAAA,EAAG;UAAwC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA,eAE/C,CACH;QACDL,QAAQ,GAAG,6BAA6B;QACxC;MACF,KAAK,CAAC;QACJD,aAAa,gBACXZ,OAAA,CAAAE,SAAA;UAAAY,QAAA,gBACEd,OAAA;YAAAc,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBlB,OAAA;YAAAc,QAAA,EAAG;UAAyC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA,eAEhD,CACH;QACDL,QAAQ,GAAG,6BAA6B;QACxC;MACF;MACA;QACED,aAAa,GAAG,IAAI;QACpBC,QAAQ,GAAG,EAAE;IACjB;IAEA,oBACEb,OAAA;MAAKmB,SAAS,EAAC,YAAY;MAAAL,QAAA,GACtBH,YAAY,CAAC,CAAC,eACfX,OAAA;QAAQoB,OAAO,EAAEA,CAAA,KAAMX,UAAU,CAAC,CAAE;QAAAK,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/DlB,OAAA;QAAKqB,GAAG,EAAC,2BAA2B;QAACC,GAAG,EAAC;MAAiB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC;EAEV,CAAC;AACH;AAACd,EAAA,CAxDQD,UAAU;AAAAoB,EAAA,GAAVpB,UAAU;AA0DnB,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}