{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const defaultData=[];// const defaultData = [\n//   {\n//     id: '1806821234567854',\n//     imageUrl: 'https://picsum.photos/id/237/1080/1080',\n//     date: '2023-12-09T21:35:36+0000',\n//     username: 'user1',\n//     comments: [\n//       { username: 'commenter1', comment: 'Great post!' },\n//       { username: 'commenter2', comment: 'Love this!' }\n//     ]\n//   },\n//   {\n//     id: '179887602982372',\n//     imageUrl: 'https://picsum.photos/id/7/1080/1920',\n//     date: '2023-12-09T21:32:54+0000',\n//     username: 'user2',\n//     comments: [\n//       { username: 'commenter3', comment: 'Amazing content!' },\n//       { username: 'commenter4', comment: 'Really nice picture.' }\n//     ]\n//   },\n//   {\n//     id: '17901198953067',\n//     imageUrl: 'https://picsum.photos/id/63/1080/1080',\n//     date: '2023-11-16T14:51:08+0000',\n//     username: 'user3',\n//     comments: [\n//       { username: 'commenter5', comment: 'This is awesome!' }\n//     ]\n//   },\n//   {\n//     id: '17987708884506',\n//     imageUrl: 'https://picsum.photos/id/16/1080/1920',\n//     date: '2023-11-03T16:16:05+0000',\n//     username: 'user4',\n//     comments: [\n//       { username: 'commenter1', comment: 'I like this post a lot.' },\n//       { username: 'commenter7', comment: 'Great job!' },\n//       { username: 'commenter8', comment: 'Very cool!' }\n//     ]\n//   },\n//   {\n//     id: '1823344558749012',\n//     imageUrl: 'https://picsum.photos/id/5/1080/1080',\n//     date: '2023-10-25T10:30:21+0000',\n//     username: 'user5',\n//     comments: [\n//       { username: 'commenter9', comment: 'Superb!' },\n//       { username: 'commenter10', comment: 'Inspiring work.' }\n//     ]\n//   },\n//   {\n//     id: '17651127890987654',\n//     imageUrl: 'https://picsum.photos/id/59/1080/1080',\n//     date: '2023-10-20T08:15:45+0000',\n//     username: 'user6',\n//     comments: [\n//       { username: 'commenter11', comment: 'Fantastic!' },\n//       { username: 'commenter12', comment: 'Wow, this is great!' }\n//     ]\n//   },\n//   {\n//     id: '176543677654',\n//     imageUrl: 'https://picsum.photos/id/59/1080/1080',\n//     date: '2023-10-20T08:15:45+0000',\n//     username: 'user6',\n//     comments: [\n//       { username: 'commenter11', comment: 'Fantastic!' },\n//       { username: 'commenter12', comment: 'Wow, this is great!' }\n//     ]\n//   },\n// ];\nconst LoadingOverlay=()=>/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,width:'100%',height:'100%',backgroundColor:'rgba(0, 0, 0, 0.5)',display:'flex',justifyContent:'center',alignItems:'center',zIndex:1000// Ensure it's above everything else\n},children:/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'2rem',color:'white'},children:\"Loading...\"})});const CardComponent=_ref=>{let{maxCards}=_ref;const[data,setData]=useState(()=>{const savedData=localStorage.getItem('defaultData');return savedData?JSON.parse(savedData):defaultData;});const[isLoading,setIsLoading]=useState(false);const[displayedComments,setDisplayedComments]=useState({});const[rejectedComments,setRejectedComments]=useState(()=>{const savedRejectedComments=localStorage.getItem('rejectedComments');return savedRejectedComments?new Set(JSON.parse(savedRejectedComments)):new Set();});const[repliedComments,setRepliedComments]=useState(()=>{const savedRepliedComments=localStorage.getItem('repliedComments');return savedRepliedComments?new Set(JSON.parse(savedRepliedComments)):new Set();});const[activeCard,setActiveCard]=useState(null);const initializeCountdown=()=>{const disabledTime=localStorage.getItem('disabledTime');if(disabledTime){const now=new Date().getTime();const remainingTime=300-Math.floor((now-parseInt(disabledTime))/1000);return remainingTime>0?remainingTime:0;}return 0;};const[isButtonDisabled,setIsButtonDisabled]=useState(initializeCountdown()>0);const[countdown,setCountdown]=useState(initializeCountdown());useEffect(()=>{let timer;if(countdown>0){timer=setTimeout(()=>{setCountdown(countdown-1);},1000);}else{setIsButtonDisabled(false);localStorage.removeItem('disabledTime');}return()=>clearTimeout(timer);},[countdown]);useEffect(()=>{localStorage.setItem('defaultData',JSON.stringify(data));},[data]);useEffect(()=>{localStorage.setItem('updatedData',JSON.stringify(data));},[data]);useEffect(()=>{localStorage.setItem('rejectedComments',JSON.stringify(Array.from(rejectedComments)));},[rejectedComments]);useEffect(()=>{localStorage.setItem('repliedComments',JSON.stringify(Array.from(repliedComments)));},[repliedComments]);const fetchMedia=async()=>{setIsLoading(true);setIsButtonDisabled(true);setCountdown(300);localStorage.setItem('disabledTime',new Date().getTime().toString());try{const response=await fetch('/fetch_media',{method:'POST',headers:{'Content-Type':'application/json'}});if(!response.ok){throw new Error(\"HTTP error! Status: \".concat(response.status));}const jsonData=await response.json();const transformedData=jsonData.map(item=>({imageUrl:item.media_url,date:item.timestamp,id:item.id,username:item.username,comments:[]}));setData(transformedData);await Promise.all(transformedData.map(item=>fetchComments(item.id,item.username)));}catch(error){console.error('Error fetching media:',error);}finally{setIsLoading(false);}};const fetchComments=async(mediaId,username)=>{try{const response=await fetch('/fetch_comments',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({media_id:mediaId,username:username})});if(!response.ok){throw new Error(\"HTTP error! Status: \".concat(response.status));}let newComments=await response.json();newComments=newComments.filter(comment=>!rejectedComments.has(comment.id)&&!repliedComments.has(comment.id));setData(prevData=>{return prevData.map(item=>{if(item.id===mediaId){// Create a Set of existing comment IDs\nconst existingCommentIds=new Set(item.comments.map(c=>c.id));// Filter new comments to exclude those already in existing comments\nconst filteredComments=newComments.filter(comment=>!existingCommentIds.has(comment.id));return{...item,comments:[...item.comments,...filteredComments]};}return item;});// No need to update localStorage here as it's already being handled in the useEffect\n});}catch(error){console.error('Error fetching comments:',error);}};const removeComment=(mediaId,commentToRemove)=>{setRejectedComments(prev=>{const newSet=new Set([...prev,commentToRemove.id]);localStorage.setItem('rejectedComments',JSON.stringify(Array.from(newSet)));// Save to localStorage\nreturn newSet;});setData(prevData=>prevData.map(item=>{if(item.id===mediaId){const updatedComments=item.comments.filter(comment=>comment.id!==commentToRemove.id);return{...item,comments:updatedComments};}return item;}));};const handleCardButtonClick=async card=>{setIsLoading(true);// Start loading\ntry{if(card.comments&&card.comments.length>0){await submitComments(card.comments);// After submitComments, find the updated card in your state\nsetData(prevData=>{const updatedData=prevData.map(post=>{if(post.id===card.id){setActiveCard(post);// Set the updated card as active\nreturn{...post};}return post;});return updatedData;});}}catch(error){console.error('Error in handleCardButtonClick:',error);}finally{setIsLoading(false);// Stop loading\n}};const closeDetailScreen=()=>{setActiveCard(null);};const updateCommentsWithResponses=responseData=>{setData(prevData=>{const updatedData=prevData.map(post=>({...post,comments:post.comments.map(comment=>{const responseEntry=responseData.find(response=>response.id===comment.id);return responseEntry?{...comment,response:responseEntry.response}:comment;})}));console.log(\"Updated data with responses:\",updatedData);return updatedData;});};const submitComments=async comments=>{try{// Filter out comments that already have a response\nconst commentsWithoutResponse=comments.filter(comment=>!comment.response);if(commentsWithoutResponse.length===0){console.log(\"No new comments to process\");return;}// Prepare the payload: include both comment text and id\nconst payload=commentsWithoutResponse.map(comment=>({id:comment.id,comment:comment.comment}));const response=await fetch('/submit_comments',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});if(!response.ok){throw new Error(\"HTTP error! Status: \".concat(response.status));}const responseData=await response.json();updateCommentsWithResponses(responseData);}catch(error){console.error('Error submitting comments:',error);}};// Check if data is empty, and if so, use defaultData\nconst effectiveData=data.length===0?defaultData:data;// Determine the number of cards to display\nconst numCardsToShow=maxCards||effectiveData.length;// Slice the data to limit the number of cards if necessary\nconst limitedData=effectiveData.slice(0,numCardsToShow);const DetailScreen=_ref2=>{let{activeCard,closeDetailScreen,fetchComments,removeComment,rejectedComments}=_ref2;const[selectedComment,setSelectedComment]=useState(null);const[showFullComment,setShowFullComment]=useState(false);const[draftReply,setDraftReply]=useState(\"\");const[generatedResponse,setGeneratedResponse]=useState(\"\");const isCommentRejected=comment=>rejectedComments.has(comment.id);const selectComment=comment=>{setSelectedComment(comment);setShowFullComment(false);setDraftReply(comment.response||\"\");};const refreshComments=()=>{if(activeCard){fetchComments(activeCard.id,activeCard.username);}};const handleShowMore=()=>{setShowFullComment(true);};const handleDraftChange=e=>{setDraftReply(e.target.value);};const rejectReply=()=>{if(selectedComment&&activeCard){setRejectedComments(prev=>new Set([...prev,selectedComment.id]));removeComment(activeCard.id,selectedComment);setSelectedComment(null);// Reset selected comment\n}};const publishReply=async()=>{console.log(\"Publishing reply:\",draftReply);if(!selectedComment){console.error(\"No comment selected\");return;}const payload={commentId:selectedComment.id,reply:draftReply};try{const response=await fetch('/publish_reply',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});if(!response.ok){throw new Error(\"HTTP error! Status: \".concat(response.status));}const responseData=await response.json();console.log(\"Reply published:\",responseData);setRepliedComments(prev=>{const newSet=new Set([...prev,selectedComment.id]);localStorage.setItem('repliedComments',JSON.stringify(Array.from(newSet)));return newSet;});if(activeCard){const updatedComments=activeCard.comments.filter(comment=>comment.id!==selectedComment.id);setActiveCard({...activeCard,comments:updatedComments});setData(prevData=>prevData.map(item=>{if(item.id===activeCard.id){return{...item,comments:updatedComments};}return item;}));}setSelectedComment(null);setDraftReply(\"\");}catch(error){console.error('Error publishing reply:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"detail-screen\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comment-header\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Post from \",activeCard.date]}),/*#__PURE__*/_jsxs(\"div\",{className:\"post-image-container\",children:[/*#__PURE__*/_jsx(\"img\",{src:activeCard.imageUrl,alt:\"Post\",className:\"post-image\"}),/*#__PURE__*/_jsx(\"div\",{className:\"post-image-text\",children:\"Some text next to the image\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"comment-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comment-counter\",children:[item.comments.filter(comment=>!rejectedComments.has(comment.id)&&repliedComments.has(comment.id)).length,\"/ comments replied to\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"circle-button\",onClick:refreshComments,children:/*#__PURE__*/_jsx(\"img\",{src:\"/Assets/reload.png\",className:\"reload\",alt:\"Close\"})})]}),/*#__PURE__*/_jsx(\"button\",{className:\"circle-button\",onClick:closeDetailScreen,children:\"X\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"content-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comments-list\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Comments\"}),activeCard.comments.filter(comment=>!isCommentRejected(comment)).filter(comment=>!rejectedComments.has(comment.id))// potential error line\n.map((comment,index)=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"comment-item \".concat(selectedComment===comment?'highlighted':''),onClick:()=>selectComment(comment),children:[/*#__PURE__*/_jsx(\"img\",{src:comment.userImage,alt:\"User\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"comment-username\",children:[\"@\",comment.username]}),/*#__PURE__*/_jsx(\"div\",{className:\"separator\",children:\"| \"}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-text\",children:comment.comment})]},index);})]}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-detail\",children:selectedComment?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comment-detail-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:selectedComment.userImage,alt:\"User\",className:\"comment-user-image\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"@\",selectedComment.username]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-detail-title\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Commented:\"})}),/*#__PURE__*/_jsxs(\"p\",{className:\"comment-text\",children:[showFullComment||selectedComment.comment.length<=250?\"\\\"\".concat(selectedComment.comment,\"\\\"\"):\"\\\"\".concat(selectedComment.comment.substring(0,247),\"...\\\"\"),!showFullComment&&selectedComment.comment.length>250&&/*#__PURE__*/_jsx(\"button\",{onClick:handleShowMore,children:\"Show more\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"draft-reply-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"draft-reply-header\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Your reply draft:\"})}),/*#__PURE__*/_jsx(\"textarea\",{value:draftReply,onChange:handleDraftChange,placeholder:\"Type your reply...\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"draft-reply-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"reject-button\",onClick:rejectReply,children:\"Reject \\u2716\"}),/*#__PURE__*/_jsx(\"button\",{className:\"publish-button\",onClick:publishReply,children:\"Publish \\u2708\"})]})]})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Select a comment to view details\"})})]})]});};return/*#__PURE__*/_jsxs(\"div\",{children:[isLoading&&/*#__PURE__*/_jsx(LoadingOverlay,{}),\" \",activeCard?/*#__PURE__*/_jsx(DetailScreen,{activeCard:activeCard,closeDetailScreen:closeDetailScreen,fetchComments:fetchComments,removeComment:removeComment,rejectedComments:rejectedComments}):/*#__PURE__*/_jsxs(\"div\",{className:\"card-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"refresh-button\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:fetchMedia,disabled:isButtonDisabled,style:{backgroundColor:isButtonDisabled?'grey':'originalColor',cursor:isButtonDisabled?'not-allowed':'pointer'},children:[/*#__PURE__*/_jsx(\"span\",{children:\" Refresh feed \"}),isButtonDisabled&&/*#__PURE__*/_jsxs(\"span\",{children:[\" (\",countdown,\" seconds)\"]}),/*#__PURE__*/_jsx(\"img\",{src:\"/Assets/refresh_red.png\",className:\"reload\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tooltip\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"tooltip-icon\",children:\"?\"}),/*#__PURE__*/_jsx(\"span\",{className:\"tooltip-text\",children:\"A process is a set of structured activities and tasks performed to achieve a specific goal.\"})]})]}),limitedData.length>0?limitedData.map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"counter-box\",children:[item.comments.filter(comment=>!rejectedComments.has(comment.id)&&repliedComments.has(comment.id)).length,\"/\",item.comments.filter(comment=>!rejectedComments.has(comment.id)).length]}),/*#__PURE__*/_jsx(\"h2\",{children:\" Comments replied \"}),/*#__PURE__*/_jsx(\"button\",{className:\"circle-button\",onClick:()=>fetchComments(item.id,item.username),children:/*#__PURE__*/_jsx(\"img\",{src:\"/Assets/reload.png\",className:\"reload\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-content\",children:[/*#__PURE__*/_jsx(\"img\",{src:item.imageUrl,alt:\"Post\",className:\"card-image\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-text\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Post Date:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"card-date\",children:item.date})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"card-button\",onClick:()=>handleCardButtonClick(item),children:[\"Review \",item.comments.filter(comment=>!rejectedComments.has(comment.id)).length,\" Draft Replies >\"]})]})]})]},item.id||index)):/*#__PURE__*/_jsxs(\"div\",{className:\"empty-screen\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"No content!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Your content will appear here when available.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchMedia,children:\"Get Content\"})]})]})]});};export default CardComponent;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","defaultData","LoadingOverlay","style","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","children","fontSize","color","CardComponent","_ref","maxCards","data","setData","savedData","localStorage","getItem","JSON","parse","isLoading","setIsLoading","displayedComments","setDisplayedComments","rejectedComments","setRejectedComments","savedRejectedComments","Set","repliedComments","setRepliedComments","savedRepliedComments","activeCard","setActiveCard","initializeCountdown","disabledTime","now","Date","getTime","remainingTime","Math","floor","parseInt","isButtonDisabled","setIsButtonDisabled","countdown","setCountdown","timer","setTimeout","removeItem","clearTimeout","setItem","stringify","Array","from","fetchMedia","toString","response","fetch","method","headers","ok","Error","concat","status","jsonData","json","transformedData","map","item","imageUrl","media_url","date","timestamp","id","username","comments","Promise","all","fetchComments","error","console","mediaId","body","media_id","newComments","filter","comment","has","prevData","existingCommentIds","c","filteredComments","removeComment","commentToRemove","prev","newSet","updatedComments","handleCardButtonClick","card","length","submitComments","updatedData","post","closeDetailScreen","updateCommentsWithResponses","responseData","responseEntry","find","log","commentsWithoutResponse","payload","effectiveData","numCardsToShow","limitedData","slice","DetailScreen","_ref2","selectedComment","setSelectedComment","showFullComment","setShowFullComment","draftReply","setDraftReply","generatedResponse","setGeneratedResponse","isCommentRejected","selectComment","refreshComments","handleShowMore","handleDraftChange","e","target","value","rejectReply","publishReply","commentId","reply","className","src","alt","onClick","index","userImage","substring","onChange","placeholder","disabled","cursor"],"sources":["C:/Users/riadd/Documents/GitHub/SuperpowerDM/frontend/superpowerdm/src/Components/cards.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst defaultData = [];\r\n\r\n// const defaultData = [\r\n//   {\r\n//     id: '1806821234567854',\r\n//     imageUrl: 'https://picsum.photos/id/237/1080/1080',\r\n//     date: '2023-12-09T21:35:36+0000',\r\n//     username: 'user1',\r\n//     comments: [\r\n//       { username: 'commenter1', comment: 'Great post!' },\r\n//       { username: 'commenter2', comment: 'Love this!' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: '179887602982372',\r\n//     imageUrl: 'https://picsum.photos/id/7/1080/1920',\r\n//     date: '2023-12-09T21:32:54+0000',\r\n//     username: 'user2',\r\n//     comments: [\r\n//       { username: 'commenter3', comment: 'Amazing content!' },\r\n//       { username: 'commenter4', comment: 'Really nice picture.' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: '17901198953067',\r\n//     imageUrl: 'https://picsum.photos/id/63/1080/1080',\r\n//     date: '2023-11-16T14:51:08+0000',\r\n//     username: 'user3',\r\n//     comments: [\r\n//       { username: 'commenter5', comment: 'This is awesome!' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: '17987708884506',\r\n//     imageUrl: 'https://picsum.photos/id/16/1080/1920',\r\n//     date: '2023-11-03T16:16:05+0000',\r\n//     username: 'user4',\r\n//     comments: [\r\n//       { username: 'commenter1', comment: 'I like this post a lot.' },\r\n//       { username: 'commenter7', comment: 'Great job!' },\r\n//       { username: 'commenter8', comment: 'Very cool!' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: '1823344558749012',\r\n//     imageUrl: 'https://picsum.photos/id/5/1080/1080',\r\n//     date: '2023-10-25T10:30:21+0000',\r\n//     username: 'user5',\r\n//     comments: [\r\n//       { username: 'commenter9', comment: 'Superb!' },\r\n//       { username: 'commenter10', comment: 'Inspiring work.' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: '17651127890987654',\r\n//     imageUrl: 'https://picsum.photos/id/59/1080/1080',\r\n//     date: '2023-10-20T08:15:45+0000',\r\n//     username: 'user6',\r\n//     comments: [\r\n//       { username: 'commenter11', comment: 'Fantastic!' },\r\n//       { username: 'commenter12', comment: 'Wow, this is great!' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: '176543677654',\r\n//     imageUrl: 'https://picsum.photos/id/59/1080/1080',\r\n//     date: '2023-10-20T08:15:45+0000',\r\n//     username: 'user6',\r\n//     comments: [\r\n//       { username: 'commenter11', comment: 'Fantastic!' },\r\n//       { username: 'commenter12', comment: 'Wow, this is great!' }\r\n//     ]\r\n//   },\r\n// ];\r\nconst LoadingOverlay = () => (\r\n  <div style={{\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    zIndex: 1000 // Ensure it's above everything else\r\n  }}>\r\n    <div style={{ fontSize: '2rem', color: 'white' }}>Loading...</div>\r\n  </div>\r\n);\r\n\r\nconst CardComponent = ({maxCards}) => {\r\n  const [data, setData] = useState(() => {\r\n    const savedData = localStorage.getItem('defaultData');\r\n    return savedData ? JSON.parse(savedData) : defaultData;\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [displayedComments, setDisplayedComments] = useState({});\r\n  const [rejectedComments, setRejectedComments] = useState(() => {\r\n    const savedRejectedComments = localStorage.getItem('rejectedComments');\r\n    return savedRejectedComments ? new Set(JSON.parse(savedRejectedComments)) : new Set();\r\n  });\r\n  const [repliedComments, setRepliedComments] = useState(() => {\r\n    const savedRepliedComments = localStorage.getItem('repliedComments');\r\n    return savedRepliedComments ? new Set(JSON.parse(savedRepliedComments)) : new Set();\r\n  });\r\n  const [activeCard, setActiveCard] = useState(null);\r\n\r\n  const initializeCountdown = () => {\r\n    const disabledTime = localStorage.getItem('disabledTime');\r\n    if (disabledTime) {\r\n      const now = new Date().getTime();\r\n      const remainingTime = 300 - Math.floor((now - parseInt(disabledTime)) / 1000);\r\n      return remainingTime > 0 ? remainingTime : 0;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(initializeCountdown() > 0);\r\n  const [countdown, setCountdown] = useState(initializeCountdown());\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (countdown > 0) {\r\n      timer = setTimeout(() => {\r\n        setCountdown(countdown - 1);\r\n      }, 1000);\r\n    } else {\r\n      setIsButtonDisabled(false);\r\n      localStorage.removeItem('disabledTime');\r\n    }\r\n    return () => clearTimeout(timer);\r\n  }, [countdown]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('defaultData', JSON.stringify(data));\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('updatedData', JSON.stringify(data));\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('rejectedComments', JSON.stringify(Array.from(rejectedComments)));\r\n  }, [rejectedComments]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('repliedComments', JSON.stringify(Array.from(repliedComments)));\r\n  }, [repliedComments]);\r\n\r\n  const fetchMedia = async () => {\r\n    setIsLoading(true);\r\n    setIsButtonDisabled(true);\r\n    setCountdown(300);\r\n    localStorage.setItem('disabledTime', new Date().getTime().toString());\r\n  \r\n    try {\r\n      const response = await fetch('/fetch_media', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n  \r\n      const jsonData = await response.json();\r\n      const transformedData = jsonData.map(item => ({\r\n        imageUrl: item.media_url,\r\n        date: item.timestamp,\r\n        id: item.id,\r\n        username: item.username,\r\n        comments: []\r\n      }));\r\n      setData(transformedData);\r\n      await Promise.all(transformedData.map(item => fetchComments(item.id, item.username)));\r\n  \r\n    } catch (error) {\r\n      console.error('Error fetching media:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const fetchComments = async (mediaId, username) => {\r\n    try {\r\n      const response = await fetch('/fetch_comments', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ media_id: mediaId, username: username })\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n  \r\n      let newComments = await response.json();\r\n      newComments = newComments.filter(comment => \r\n        !rejectedComments.has(comment.id) && !repliedComments.has(comment.id)\r\n      );\r\n  \r\n      setData(prevData => {\r\n        return prevData.map(item => {\r\n          if (item.id === mediaId) {\r\n            // Create a Set of existing comment IDs\r\n            const existingCommentIds = new Set(item.comments.map(c => c.id));\r\n            // Filter new comments to exclude those already in existing comments\r\n            const filteredComments = newComments.filter(comment => !existingCommentIds.has(comment.id));\r\n            return { ...item, comments: [...item.comments, ...filteredComments] };\r\n          }\r\n          return item;\r\n        });\r\n        // No need to update localStorage here as it's already being handled in the useEffect\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching comments:', error);\r\n    }\r\n  };\r\n\r\n  const removeComment = (mediaId, commentToRemove) => {\r\n    setRejectedComments(prev => {\r\n      const newSet = new Set([...prev, commentToRemove.id]);\r\n      localStorage.setItem('rejectedComments', JSON.stringify(Array.from(newSet))); // Save to localStorage\r\n      return newSet;\r\n    });\r\n  \r\n    setData(prevData => prevData.map(item => {\r\n      if (item.id === mediaId) {\r\n        const updatedComments = item.comments.filter(comment => comment.id !== commentToRemove.id);\r\n        return { ...item, comments: updatedComments };\r\n      }\r\n      return item;\r\n    }));\r\n  }; \r\n\r\n  const handleCardButtonClick = async (card) => {\r\n    setIsLoading(true); // Start loading\r\n  \r\n    try {\r\n      if (card.comments && card.comments.length > 0) {\r\n        await submitComments(card.comments);\r\n  \r\n        // After submitComments, find the updated card in your state\r\n        setData(prevData => {\r\n          const updatedData = prevData.map(post => {\r\n            if (post.id === card.id) {\r\n              setActiveCard(post); // Set the updated card as active\r\n              return { ...post };\r\n            }\r\n            return post;\r\n          });\r\n          return updatedData;\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in handleCardButtonClick:', error);\r\n    } finally {\r\n      setIsLoading(false); // Stop loading\r\n    }\r\n  };\r\n  \r\n    \r\n\r\n  const closeDetailScreen = () => {\r\n    setActiveCard(null);\r\n  };\r\n\r\n  const updateCommentsWithResponses = (responseData) => {\r\n    setData(prevData => {\r\n      const updatedData = prevData.map(post => ({\r\n        ...post,\r\n        comments: post.comments.map(comment => {\r\n          const responseEntry = responseData.find(response => response.id === comment.id);\r\n          return responseEntry \r\n            ? { ...comment, response: responseEntry.response }\r\n            : comment;\r\n        })\r\n      }));\r\n      console.log(\"Updated data with responses:\", updatedData);\r\n      return updatedData;\r\n    });\r\n  };\r\n  \r\n\r\n  const submitComments = async (comments) => {\r\n    try {\r\n      // Filter out comments that already have a response\r\n      const commentsWithoutResponse = comments.filter(comment => !comment.response);\r\n  \r\n      if (commentsWithoutResponse.length === 0) {\r\n        console.log(\"No new comments to process\");\r\n        return;\r\n      }\r\n  \r\n      // Prepare the payload: include both comment text and id\r\n      const payload = commentsWithoutResponse.map(comment => ({\r\n        id: comment.id,\r\n        comment: comment.comment\r\n      }));\r\n  \r\n      const response = await fetch('/submit_comments', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n  \r\n      const responseData = await response.json();\r\n      updateCommentsWithResponses(responseData);\r\n\r\n  \r\n    } catch (error) {\r\n      console.error('Error submitting comments:', error);\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n  // Check if data is empty, and if so, use defaultData\r\n  const effectiveData = data.length === 0 ? defaultData : data;\r\n  // Determine the number of cards to display\r\n  const numCardsToShow = maxCards || effectiveData.length;\r\n  // Slice the data to limit the number of cards if necessary\r\n  const limitedData = effectiveData.slice(0, numCardsToShow);\r\n\r\n  const DetailScreen = ({ activeCard, closeDetailScreen, fetchComments, removeComment, rejectedComments }) => {\r\n    const [selectedComment, setSelectedComment] = useState(null);\r\n    const [showFullComment, setShowFullComment] = useState(false);\r\n    const [draftReply, setDraftReply] = useState(\"\");\r\n    const [generatedResponse, setGeneratedResponse] = useState(\"\");\r\n    const isCommentRejected = (comment) => rejectedComments.has(comment.id);\r\n\r\n    const selectComment = (comment) => {\r\n      setSelectedComment(comment);\r\n      setShowFullComment(false);\r\n      setDraftReply(comment.response || \"\");\r\n    };\r\n    \r\n    const refreshComments = () => {\r\n      if (activeCard) {\r\n        fetchComments(activeCard.id, activeCard.username);\r\n      }\r\n    };\r\n\r\n    const handleShowMore = () => {\r\n      setShowFullComment(true);\r\n    };\r\n  \r\n    const handleDraftChange = (e) => {\r\n      setDraftReply(e.target.value);\r\n    };\r\n  \r\n    const rejectReply = () => {\r\n      if (selectedComment && activeCard) {\r\n        setRejectedComments(prev => new Set([...prev, selectedComment.id]));\r\n        removeComment(activeCard.id, selectedComment);\r\n        setSelectedComment(null); // Reset selected comment\r\n      }\r\n    };    \r\n\r\n    const publishReply = async () => {\r\n      console.log(\"Publishing reply:\", draftReply);\r\n    \r\n      if (!selectedComment) {\r\n        console.error(\"No comment selected\");\r\n        return;\r\n      }\r\n    \r\n      const payload = {\r\n        commentId: selectedComment.id,\r\n        reply: draftReply\r\n      };\r\n    \r\n      try {\r\n        const response = await fetch('/publish_reply', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(payload),\r\n        });\r\n    \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n    \r\n        const responseData = await response.json();\r\n        console.log(\"Reply published:\", responseData);\r\n    \r\n        setRepliedComments(prev => {\r\n          const newSet = new Set([...prev, selectedComment.id]);\r\n          localStorage.setItem('repliedComments', JSON.stringify(Array.from(newSet)));\r\n          return newSet;\r\n        });\r\n    \r\n        if (activeCard) {\r\n          const updatedComments = activeCard.comments.filter(comment => comment.id !== selectedComment.id);\r\n          setActiveCard({...activeCard, comments: updatedComments});\r\n    \r\n          setData(prevData => prevData.map(item => {\r\n            if (item.id === activeCard.id) {\r\n              return { ...item, comments: updatedComments };\r\n            }\r\n            return item;\r\n          }));\r\n        }\r\n    \r\n        setSelectedComment(null);\r\n        setDraftReply(\"\");\r\n      } catch (error) {\r\n        console.error('Error publishing reply:', error);\r\n      }\r\n    };\r\n    \r\n  \r\n    return (\r\n      <div className=\"detail-screen\">\r\n        <div className=\"comment-header\">\r\n          <h2>Post from {activeCard.date}</h2>\r\n          <div className=\"post-image-container\">\r\n            <img src={activeCard.imageUrl} alt=\"Post\" className=\"post-image\" />\r\n            <div className=\"post-image-text\">Some text next to the image</div>\r\n          </div>\r\n          <div className=\"comment-info\">\r\n            <div className=\"comment-counter\">{item.comments.filter(comment => !rejectedComments.has(comment.id) && repliedComments.has(comment.id)).length}/ comments replied to\r\n             </div>\r\n            <button className=\"circle-button\" onClick={refreshComments}>\r\n              <img src=\"/Assets/reload.png\" className=\"reload\" alt=\"Close\" />\r\n            </button>\r\n          </div>\r\n          <button className=\"circle-button\" onClick={closeDetailScreen}>X</button>\r\n        </div>\r\n        <div className=\"content-body\">\r\n        <div className=\"comments-list\">\r\n          <h3>Comments</h3>\r\n          {activeCard.comments\r\n          .filter(comment => !isCommentRejected(comment))\r\n            .filter(comment => !rejectedComments.has(comment.id)) // potential error line\r\n            .map((comment, index) => {\r\n            return (\r\n              <div key={index} className={`comment-item ${selectedComment === comment ? 'highlighted' : ''}`}\r\n                  onClick={() => selectComment(comment)}>\r\n                <img src={comment.userImage} alt=\"User\" />\r\n                <div className=\"comment-username\">@{comment.username}</div>\r\n                <div className=\"separator\">| </div>\r\n                <div className=\"comment-text\">{comment.comment}</div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n          <div className=\"comment-detail\">\r\n            {selectedComment ? (\r\n                <>\r\n                <div className=\"comment-detail-header\">\r\n                  <img src={selectedComment.userImage} alt=\"User\" className=\"comment-user-image\" />\r\n                  <span>@{selectedComment.username}</span>\r\n                </div>\r\n                <div className=\"comment-detail-title\">\r\n                  <h2>Commented:</h2>\r\n                </div>\r\n                <p className=\"comment-text\">\r\n                {showFullComment || (selectedComment.comment.length <= 250)\r\n                    ? `\"${selectedComment.comment}\"`\r\n                    : `\"${selectedComment.comment.substring(0, 247)}...\"`\r\n                  }\r\n                  {!showFullComment && selectedComment.comment.length > 250 && (\r\n                    <button onClick={handleShowMore}>Show more</button>\r\n                  )}\r\n                </p>\r\n                <div className=\"draft-reply-container\">\r\n                  <div className=\"draft-reply-header\">\r\n                    {/* <img src=\"/Assets/def_pfp.jpg\" alt=\"Reply Icon\" /> */}\r\n                    <span>Your reply draft:</span>\r\n                  </div>\r\n                  <textarea\r\n                    value={draftReply}\r\n                    onChange={handleDraftChange}\r\n                    placeholder=\"Type your reply...\"\r\n                  />\r\n                  <div className=\"draft-reply-actions\">\r\n                    <button className=\"reject-button\" onClick={rejectReply}>Reject ✖</button>\r\n                    <button className=\"publish-button\" onClick={publishReply}>Publish ✈</button>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <p>Select a comment to view details</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <LoadingOverlay />} {/* Loading overlay */}\r\n      {activeCard ? (\r\n        <DetailScreen \r\n          activeCard={activeCard} \r\n          closeDetailScreen={closeDetailScreen} \r\n          fetchComments={fetchComments}\r\n          removeComment={removeComment}\r\n          rejectedComments={rejectedComments}\r\n          />\r\n      ) : (\r\n      <div className=\"card-container\">\r\n      <div className=\"refresh-button\">\r\n          <button \r\n            onClick={fetchMedia} \r\n            disabled={isButtonDisabled}\r\n            style={{\r\n            backgroundColor: isButtonDisabled ? 'grey' : 'originalColor',\r\n            cursor: isButtonDisabled ? 'not-allowed' : 'pointer',\r\n          }}\r\n          >\r\n          <span> Refresh feed </span>\r\n            {isButtonDisabled && <span> ({countdown} seconds)</span>}\r\n            <img src=\"/Assets/refresh_red.png\" className=\"reload\" />\r\n          </button>\r\n          <div className=\"tooltip\">\r\n                  <span className=\"tooltip-icon\">?</span>\r\n                  <span className=\"tooltip-text\">A process is a set of structured activities and tasks performed to achieve a specific goal.</span>\r\n          </div>\r\n      </div>\r\n        {limitedData.length > 0 ? limitedData.map((item, index) => (\r\n          <div key={item.id || index} className=\"card\">\r\n            {/* Card Header */}\r\n            <div className=\"card-header\">\r\n            <span className=\"counter-box\">\r\n            {item.comments.filter(comment => !rejectedComments.has(comment.id) && repliedComments.has(comment.id)).length}/ \r\n            {item.comments.filter(comment => !rejectedComments.has(comment.id)).length}     \r\n            </span>\r\n              <h2> Comments replied </h2>\r\n              <button className=\"circle-button\" onClick={() => fetchComments(item.id, item.username)}>\r\n                <img src=\"/Assets/reload.png\" className=\"reload\" />\r\n              </button>\r\n            </div>\r\n            {/* Card Content */}\r\n            <div className=\"card-content\">\r\n              {/* Image on the left */}\r\n              <img src={item.imageUrl} alt=\"Post\" className=\"card-image\" />\r\n\r\n              {/* Text and Button on the right */}\r\n              <div className=\"card-text\">\r\n                <div>\r\n                  <h4>Post Date:</h4>\r\n                  <p className=\"card-date\">{item.date}</p>\r\n                </div>\r\n                \r\n                <button className=\"card-button\" onClick={() => handleCardButtonClick(item)}>\r\n                    Review {item.comments.filter(comment => !rejectedComments.has(comment.id)).length} Draft Replies >\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )) : (\r\n          <div className=\"empty-screen\">\r\n            <h1>No content!</h1>\r\n            <p>Your content will appear here when available.</p>\r\n            {/* <img src=\"/Assets/def_pfp.jpg\" alt=\"Descriptive Alt Text\" /> */}\r\n            <button onClick={fetchMedia}>Get Content</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}