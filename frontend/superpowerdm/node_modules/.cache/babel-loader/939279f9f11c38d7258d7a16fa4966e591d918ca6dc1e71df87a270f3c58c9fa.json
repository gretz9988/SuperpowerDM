{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const defaultData=[];// const defaultData = [\n//   {\n//     id: '1806821234567854',\n//     imageUrl: 'https://picsum.photos/id/237/1080/1080',\n//     date: '2023-12-09T21:35:36+0000',\n//     username: 'user1',\n//     comments: [\n//       { username: 'commenter1', comment: 'Great post!' },\n//       { username: 'commenter2', comment: 'Love this!' }\n//     ]\n//   },\n//   {\n//     id: '179887602982372',\n//     imageUrl: 'https://picsum.photos/id/7/1080/1920',\n//     date: '2023-12-09T21:32:54+0000',\n//     username: 'user2',\n//     comments: [\n//       { username: 'commenter3', comment: 'Amazing content!' },\n//       { username: 'commenter4', comment: 'Really nice picture.' }\n//     ]\n//   },\n//   {\n//     id: '17901198953067',\n//     imageUrl: 'https://picsum.photos/id/63/1080/1080',\n//     date: '2023-11-16T14:51:08+0000',\n//     username: 'user3',\n//     comments: [\n//       { username: 'commenter5', comment: 'This is awesome!' }\n//     ]\n//   },\n//   {\n//     id: '17987708884506',\n//     imageUrl: 'https://picsum.photos/id/16/1080/1920',\n//     date: '2023-11-03T16:16:05+0000',\n//     username: 'user4',\n//     comments: [\n//       { username: 'commenter1', comment: 'I like this post a lot.' },\n//       { username: 'commenter7', comment: 'Great job!' },\n//       { username: 'commenter8', comment: 'Very cool!' }\n//     ]\n//   },\n//   {\n//     id: '1823344558749012',\n//     imageUrl: 'https://picsum.photos/id/5/1080/1080',\n//     date: '2023-10-25T10:30:21+0000',\n//     username: 'user5',\n//     comments: [\n//       { username: 'commenter9', comment: 'Superb!' },\n//       { username: 'commenter10', comment: 'Inspiring work.' }\n//     ]\n//   },\n//   {\n//     id: '17651127890987654',\n//     imageUrl: 'https://picsum.photos/id/59/1080/1080',\n//     date: '2023-10-20T08:15:45+0000',\n//     username: 'user6',\n//     comments: [\n//       { username: 'commenter11', comment: 'Fantastic!' },\n//       { username: 'commenter12', comment: 'Wow, this is great!' }\n//     ]\n//   },\n//   {\n//     id: '176543677654',\n//     imageUrl: 'https://picsum.photos/id/59/1080/1080',\n//     date: '2023-10-20T08:15:45+0000',\n//     username: 'user6',\n//     comments: [\n//       { username: 'commenter11', comment: 'Fantastic!' },\n//       { username: 'commenter12', comment: 'Wow, this is great!' }\n//     ]\n//   },\n// ];\nconst LoadingOverlay=()=>/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,width:'100%',height:'100%',backgroundColor:'rgba(0, 0, 0, 0.5)',display:'flex',justifyContent:'center',alignItems:'center',zIndex:1000// Ensure it's above everything else\n},children:/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'2rem',color:'white'},children:\"Loading...\"})});const CardComponent=_ref=>{let{maxCards}=_ref;const[data,setData]=useState(()=>{const savedData=localStorage.getItem('defaultData');return savedData?JSON.parse(savedData):defaultData;});const[isLoading,setIsLoading]=useState(false);const[displayedComments,setDisplayedComments]=useState({});const[rejectedComments,setRejectedComments]=useState(()=>{const savedRejectedComments=localStorage.getItem('rejectedComments');return savedRejectedComments?new Set(JSON.parse(savedRejectedComments)):new Set();});const[activeCard,setActiveCard]=useState(null);useEffect(()=>{localStorage.setItem('defaultData',JSON.stringify(data));},[data]);useEffect(()=>{localStorage.setItem('updatedData',JSON.stringify(data));},[data]);useEffect(()=>{localStorage.setItem('rejectedComments',JSON.stringify(Array.from(rejectedComments)));},[rejectedComments]);const fetchMedia=async()=>{try{const response=await fetch('/fetch_media',{method:'POST',headers:{'Content-Type':'application/json'}});if(!response.ok){throw new Error(\"HTTP error! Status: \".concat(response.status));}const jsonData=await response.json();const transformedData=jsonData.map(item=>({imageUrl:item.media_url,date:item.timestamp,id:item.id,username:item.username,comments:[]// Initialize comments as an empty array\n}));// Update state and save to localStorage\nsetData(prevData=>{// Combine the old and new data, removing duplicates\nconst combinedData=[...prevData,...transformedData];const uniqueData=Array.from(new Map(combinedData.map(item=>[item['id'],item])).values());// Limit to 6 most recent items\nconst limitedData=uniqueData.slice(-6);localStorage.setItem('defaultData',JSON.stringify(limitedData));return limitedData;});}catch(error){console.error('Error fetching media:',error);}};const fetchComments=async(mediaId,username)=>{try{const response=await fetch('/fetch_comments',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({media_id:mediaId,username:username})});if(!response.ok){throw new Error(\"HTTP error! Status: \".concat(response.status));}let newComments=await response.json();newComments=newComments.filter(comment=>!rejectedComments.has(comment.id));setData(prevData=>{return prevData.map(item=>{if(item.id===mediaId){// Create a Set of existing comment IDs\nconst existingCommentIds=new Set(item.comments.map(c=>c.id));// Filter new comments to exclude those already in existing comments\nconst filteredComments=newComments.filter(comment=>!existingCommentIds.has(comment.id));return{...item,comments:[...item.comments,...filteredComments]};}return item;});// No need to update localStorage here as it's already being handled in the useEffect\n});}catch(error){console.error('Error fetching comments:',error);}};const removeComment=(mediaId,commentToRemove)=>{setRejectedComments(prev=>{const newSet=new Set([...prev,commentToRemove.id]);localStorage.setItem('rejectedComments',JSON.stringify(Array.from(newSet)));// Save to localStorage\nreturn newSet;});setData(prevData=>prevData.map(item=>{if(item.id===mediaId){const updatedComments=item.comments.filter(comment=>comment.id!==commentToRemove.id);return{...item,comments:updatedComments};}return item;}));};const handleCardButtonClick=async card=>{setIsLoading(true);// Start loading\ntry{if(card.comments&&card.comments.length>0){await submitComments(card.comments);// After submitComments, find the updated card in your state\nsetData(prevData=>{const updatedData=prevData.map(post=>{if(post.id===card.id){setActiveCard(post);// Set the updated card as active\nreturn{...post};}return post;});return updatedData;});}}catch(error){console.error('Error in handleCardButtonClick:',error);}finally{setIsLoading(false);// Stop loading\n}};const closeDetailScreen=()=>{setActiveCard(null);};const updateCommentsWithResponses=responseData=>{setData(prevData=>{const updatedData=prevData.map(post=>({...post,comments:post.comments.map(comment=>{const responseEntry=responseData.find(response=>response.id===comment.id);return responseEntry?{...comment,response:responseEntry.response}:comment;})}));console.log(\"Updated data with responses:\",updatedData);return updatedData;});};const submitComments=async comments=>{try{// Filter out comments that already have a response\nconst commentsWithoutResponse=comments.filter(comment=>!comment.response);if(commentsWithoutResponse.length===0){console.log(\"No new comments to process\");return;}// Prepare the payload: include both comment text and id\nconst payload=commentsWithoutResponse.map(comment=>({id:comment.id,comment:comment.comment}));const response=await fetch('/submit_comments',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});if(!response.ok){throw new Error(\"HTTP error! Status: \".concat(response.status));}const responseData=await response.json();updateCommentsWithResponses(responseData);}catch(error){console.error('Error submitting comments:',error);}};// Check if data is empty, and if so, use defaultData\nconst effectiveData=data.length===0?defaultData:data;// Determine the number of cards to display\nconst numCardsToShow=maxCards||effectiveData.length;// Slice the data to limit the number of cards if necessary\nconst limitedData=effectiveData.slice(0,numCardsToShow);const DetailScreen=_ref2=>{let{activeCard,closeDetailScreen,fetchComments,removeComment,rejectedComments}=_ref2;const[selectedComment,setSelectedComment]=useState(null);const[showFullComment,setShowFullComment]=useState(false);const[draftReply,setDraftReply]=useState(\"\");const[generatedResponse,setGeneratedResponse]=useState(\"\");const isCommentRejected=comment=>rejectedComments.has(comment.id);const selectComment=comment=>{setSelectedComment(comment);setShowFullComment(false);setDraftReply(comment.response||\"\");};const refreshComments=()=>{if(activeCard){fetchComments(activeCard.id,activeCard.username);}};const handleShowMore=()=>{setShowFullComment(true);};const handleDraftChange=e=>{setDraftReply(e.target.value);};const publishReply=()=>{console.log(\"Publishing reply:\",draftReply);// Add logic to publish the reply\n};const rejectReply=()=>{if(selectedComment&&activeCard){setRejectedComments(prev=>new Set([...prev,selectedComment.id]));removeComment(activeCard.id,selectedComment);setSelectedComment(null);// Reset selected comment\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"detail-screen\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comment-header\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Post from \",activeCard.date]}),/*#__PURE__*/_jsxs(\"div\",{className:\"post-image-container\",children:[/*#__PURE__*/_jsx(\"img\",{src:activeCard.imageUrl,alt:\"Post\",className:\"post-image\"}),/*#__PURE__*/_jsx(\"div\",{className:\"post-image-text\",children:\"Some text next to the image\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"comment-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comment-counter\",children:[activeCard.comments.filter(comment=>!rejectedComments.has(comment.id)).length,\" comments replied to\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"circle-button\",onClick:refreshComments,children:/*#__PURE__*/_jsx(\"img\",{src:\"/Assets/reload.png\",className:\"reload\",alt:\"Close\"})})]}),/*#__PURE__*/_jsx(\"button\",{className:\"circle-button\",onClick:closeDetailScreen,children:\"X\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"content-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comments-list\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Comments\"}),activeCard.comments.filter(comment=>!isCommentRejected(comment)).filter(comment=>!rejectedComments.has(comment.id))// potential error line\n.map((comment,index)=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"comment-item \".concat(selectedComment===comment?'highlighted':''),onClick:()=>selectComment(comment),children:[/*#__PURE__*/_jsx(\"img\",{src:comment.userImage,alt:\"User\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"comment-username\",children:[\"@\",comment.username]}),/*#__PURE__*/_jsx(\"div\",{className:\"separator\",children:\"| \"}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-text\",children:comment.comment})]},index);})]}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-detail\",children:selectedComment?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comment-detail-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:selectedComment.userImage,alt:\"User\",className:\"comment-user-image\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"@\",selectedComment.username]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-detail-title\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Commented:\"})}),/*#__PURE__*/_jsxs(\"p\",{className:\"comment-text\",children:[showFullComment||selectedComment.comment.length<=250?\"\\\"\".concat(selectedComment.comment,\"\\\"\"):\"\\\"\".concat(selectedComment.comment.substring(0,247),\"...\\\"\"),!showFullComment&&selectedComment.comment.length>250&&/*#__PURE__*/_jsx(\"button\",{onClick:handleShowMore,children:\"Show more\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"draft-reply-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"draft-reply-header\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Your reply draft:\"})}),/*#__PURE__*/_jsx(\"textarea\",{value:draftReply,onChange:handleDraftChange,placeholder:\"Type your reply...\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"draft-reply-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"reject-button\",onClick:rejectReply,children:\"Reject \\u2716\"}),/*#__PURE__*/_jsx(\"button\",{className:\"publish-button\",onClick:publishReply,children:\"Publish \\u2708\"})]})]})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Select a comment to view details\"})})]})]});};return/*#__PURE__*/_jsxs(\"div\",{children:[isLoading&&/*#__PURE__*/_jsx(LoadingOverlay,{}),\" \",activeCard?/*#__PURE__*/_jsx(DetailScreen,{activeCard:activeCard,closeDetailScreen:closeDetailScreen,fetchComments:fetchComments,removeComment:removeComment,rejectedComments:rejectedComments}):/*#__PURE__*/_jsxs(\"div\",{className:\"card-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"refresh-button\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:fetchMedia,children:[/*#__PURE__*/_jsx(\"span\",{children:\" Refresh feed \"}),/*#__PURE__*/_jsx(\"img\",{src:\"/Assets/refresh_red.png\",className:\"reload\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tooltip\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"tooltip-icon\",children:\"?\"}),/*#__PURE__*/_jsx(\"span\",{className:\"tooltip-text\",children:\"A process is a set of structured activities and tasks performed to achieve a specific goal.\"})]})]}),limitedData.length>0?limitedData.map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"counter-box\",children:item.comments.filter(comment=>!rejectedComments.has(comment.id)).length}),/*#__PURE__*/_jsx(\"h2\",{children:\" Comments replied \"}),/*#__PURE__*/_jsx(\"button\",{className:\"circle-button\",onClick:()=>fetchComments(item.id,item.username),children:/*#__PURE__*/_jsx(\"img\",{src:\"/Assets/reload.png\",className:\"reload\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-content\",children:[/*#__PURE__*/_jsx(\"img\",{src:item.imageUrl,alt:\"Post\",className:\"card-image\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-text\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Post Date:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"card-date\",children:item.date})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"card-button\",onClick:()=>handleCardButtonClick(item),children:[\"Review \",item.comments.filter(comment=>!rejectedComments.has(comment.id)).length,\" Draft Replies >\"]})]})]})]},item.id||index)):/*#__PURE__*/_jsxs(\"div\",{className:\"empty-screen\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"No content!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Your content will appear here when available.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchMedia,children:\"Get Content\"})]})]})]});};export default CardComponent;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","defaultData","LoadingOverlay","style","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","children","fontSize","color","CardComponent","_ref","maxCards","data","setData","savedData","localStorage","getItem","JSON","parse","isLoading","setIsLoading","displayedComments","setDisplayedComments","rejectedComments","setRejectedComments","savedRejectedComments","Set","activeCard","setActiveCard","setItem","stringify","Array","from","fetchMedia","response","fetch","method","headers","ok","Error","concat","status","jsonData","json","transformedData","map","item","imageUrl","media_url","date","timestamp","id","username","comments","prevData","combinedData","uniqueData","Map","values","limitedData","slice","error","console","fetchComments","mediaId","body","media_id","newComments","filter","comment","has","existingCommentIds","c","filteredComments","removeComment","commentToRemove","prev","newSet","updatedComments","handleCardButtonClick","card","length","submitComments","updatedData","post","closeDetailScreen","updateCommentsWithResponses","responseData","responseEntry","find","log","commentsWithoutResponse","payload","effectiveData","numCardsToShow","DetailScreen","_ref2","selectedComment","setSelectedComment","showFullComment","setShowFullComment","draftReply","setDraftReply","generatedResponse","setGeneratedResponse","isCommentRejected","selectComment","refreshComments","handleShowMore","handleDraftChange","e","target","value","publishReply","rejectReply","className","src","alt","onClick","index","userImage","substring","onChange","placeholder"],"sources":["C:/Users/riadd/Documents/GitHub/SuperpowerDM/frontend/superpowerdm/src/Components/cards.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst defaultData = [];\r\n\r\n// const defaultData = [\r\n//   {\r\n//     id: '1806821234567854',\r\n//     imageUrl: 'https://picsum.photos/id/237/1080/1080',\r\n//     date: '2023-12-09T21:35:36+0000',\r\n//     username: 'user1',\r\n//     comments: [\r\n//       { username: 'commenter1', comment: 'Great post!' },\r\n//       { username: 'commenter2', comment: 'Love this!' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: '179887602982372',\r\n//     imageUrl: 'https://picsum.photos/id/7/1080/1920',\r\n//     date: '2023-12-09T21:32:54+0000',\r\n//     username: 'user2',\r\n//     comments: [\r\n//       { username: 'commenter3', comment: 'Amazing content!' },\r\n//       { username: 'commenter4', comment: 'Really nice picture.' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: '17901198953067',\r\n//     imageUrl: 'https://picsum.photos/id/63/1080/1080',\r\n//     date: '2023-11-16T14:51:08+0000',\r\n//     username: 'user3',\r\n//     comments: [\r\n//       { username: 'commenter5', comment: 'This is awesome!' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: '17987708884506',\r\n//     imageUrl: 'https://picsum.photos/id/16/1080/1920',\r\n//     date: '2023-11-03T16:16:05+0000',\r\n//     username: 'user4',\r\n//     comments: [\r\n//       { username: 'commenter1', comment: 'I like this post a lot.' },\r\n//       { username: 'commenter7', comment: 'Great job!' },\r\n//       { username: 'commenter8', comment: 'Very cool!' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: '1823344558749012',\r\n//     imageUrl: 'https://picsum.photos/id/5/1080/1080',\r\n//     date: '2023-10-25T10:30:21+0000',\r\n//     username: 'user5',\r\n//     comments: [\r\n//       { username: 'commenter9', comment: 'Superb!' },\r\n//       { username: 'commenter10', comment: 'Inspiring work.' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: '17651127890987654',\r\n//     imageUrl: 'https://picsum.photos/id/59/1080/1080',\r\n//     date: '2023-10-20T08:15:45+0000',\r\n//     username: 'user6',\r\n//     comments: [\r\n//       { username: 'commenter11', comment: 'Fantastic!' },\r\n//       { username: 'commenter12', comment: 'Wow, this is great!' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: '176543677654',\r\n//     imageUrl: 'https://picsum.photos/id/59/1080/1080',\r\n//     date: '2023-10-20T08:15:45+0000',\r\n//     username: 'user6',\r\n//     comments: [\r\n//       { username: 'commenter11', comment: 'Fantastic!' },\r\n//       { username: 'commenter12', comment: 'Wow, this is great!' }\r\n//     ]\r\n//   },\r\n// ];\r\nconst LoadingOverlay = () => (\r\n  <div style={{\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    zIndex: 1000 // Ensure it's above everything else\r\n  }}>\r\n    <div style={{ fontSize: '2rem', color: 'white' }}>Loading...</div>\r\n  </div>\r\n);\r\n\r\nconst CardComponent = ({maxCards}) => {\r\n  const [data, setData] = useState(() => {\r\n    const savedData = localStorage.getItem('defaultData');\r\n    return savedData ? JSON.parse(savedData) : defaultData;\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [displayedComments, setDisplayedComments] = useState({});\r\n  const [rejectedComments, setRejectedComments] = useState(() => {\r\n    const savedRejectedComments = localStorage.getItem('rejectedComments');\r\n    return savedRejectedComments ? new Set(JSON.parse(savedRejectedComments)) : new Set();\r\n  });\r\n  const [activeCard, setActiveCard] = useState(null);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('defaultData', JSON.stringify(data));\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('updatedData', JSON.stringify(data));\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('rejectedComments', JSON.stringify(Array.from(rejectedComments)));\r\n  }, [rejectedComments]);\r\n\r\n  const fetchMedia = async () => {\r\n    try {\r\n      const response = await fetch('/fetch_media', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n  \r\n      const jsonData = await response.json();\r\n      const transformedData = jsonData.map(item => ({\r\n        imageUrl: item.media_url,\r\n        date: item.timestamp,\r\n        id: item.id,\r\n        username: item.username,\r\n        comments: [] // Initialize comments as an empty array\r\n      }));\r\n  \r\n      // Update state and save to localStorage\r\n      setData(prevData => {\r\n        // Combine the old and new data, removing duplicates\r\n        const combinedData = [...prevData, ...transformedData];\r\n        const uniqueData = Array.from(new Map(combinedData.map(item => [item['id'], item])).values());\r\n  \r\n        // Limit to 6 most recent items\r\n        const limitedData = uniqueData.slice(-6);\r\n  \r\n        localStorage.setItem('defaultData', JSON.stringify(limitedData));\r\n        return limitedData;\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching media:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const fetchComments = async (mediaId, username) => {\r\n    try {\r\n      const response = await fetch('/fetch_comments', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ media_id: mediaId, username: username })\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n  \r\n      let newComments = await response.json();\r\n      newComments = newComments.filter(comment => !rejectedComments.has(comment.id));\r\n  \r\n      setData(prevData => {\r\n        return prevData.map(item => {\r\n          if (item.id === mediaId) {\r\n            // Create a Set of existing comment IDs\r\n            const existingCommentIds = new Set(item.comments.map(c => c.id));\r\n            // Filter new comments to exclude those already in existing comments\r\n            const filteredComments = newComments.filter(comment => !existingCommentIds.has(comment.id));\r\n            return { ...item, comments: [...item.comments, ...filteredComments] };\r\n          }\r\n          return item;\r\n        });\r\n        // No need to update localStorage here as it's already being handled in the useEffect\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching comments:', error);\r\n    }\r\n  };\r\n\r\n  const removeComment = (mediaId, commentToRemove) => {\r\n    setRejectedComments(prev => {\r\n      const newSet = new Set([...prev, commentToRemove.id]);\r\n      localStorage.setItem('rejectedComments', JSON.stringify(Array.from(newSet))); // Save to localStorage\r\n      return newSet;\r\n    });\r\n  \r\n    setData(prevData => prevData.map(item => {\r\n      if (item.id === mediaId) {\r\n        const updatedComments = item.comments.filter(comment => comment.id !== commentToRemove.id);\r\n        return { ...item, comments: updatedComments };\r\n      }\r\n      return item;\r\n    }));\r\n  }; \r\n\r\n  const handleCardButtonClick = async (card) => {\r\n    setIsLoading(true); // Start loading\r\n  \r\n    try {\r\n      if (card.comments && card.comments.length > 0) {\r\n        await submitComments(card.comments);\r\n  \r\n        // After submitComments, find the updated card in your state\r\n        setData(prevData => {\r\n          const updatedData = prevData.map(post => {\r\n            if (post.id === card.id) {\r\n              setActiveCard(post); // Set the updated card as active\r\n              return { ...post };\r\n            }\r\n            return post;\r\n          });\r\n          return updatedData;\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in handleCardButtonClick:', error);\r\n    } finally {\r\n      setIsLoading(false); // Stop loading\r\n    }\r\n  };\r\n  \r\n    \r\n\r\n  const closeDetailScreen = () => {\r\n    setActiveCard(null);\r\n  };\r\n\r\n  const updateCommentsWithResponses = (responseData) => {\r\n    setData(prevData => {\r\n      const updatedData = prevData.map(post => ({\r\n        ...post,\r\n        comments: post.comments.map(comment => {\r\n          const responseEntry = responseData.find(response => response.id === comment.id);\r\n          return responseEntry \r\n            ? { ...comment, response: responseEntry.response }\r\n            : comment;\r\n        })\r\n      }));\r\n      console.log(\"Updated data with responses:\", updatedData);\r\n      return updatedData;\r\n    });\r\n  };\r\n  \r\n\r\n  const submitComments = async (comments) => {\r\n    try {\r\n      // Filter out comments that already have a response\r\n      const commentsWithoutResponse = comments.filter(comment => !comment.response);\r\n  \r\n      if (commentsWithoutResponse.length === 0) {\r\n        console.log(\"No new comments to process\");\r\n        return;\r\n      }\r\n  \r\n      // Prepare the payload: include both comment text and id\r\n      const payload = commentsWithoutResponse.map(comment => ({\r\n        id: comment.id,\r\n        comment: comment.comment\r\n      }));\r\n  \r\n      const response = await fetch('/submit_comments', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n  \r\n      const responseData = await response.json();\r\n      updateCommentsWithResponses(responseData);\r\n\r\n  \r\n    } catch (error) {\r\n      console.error('Error submitting comments:', error);\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n  // Check if data is empty, and if so, use defaultData\r\n  const effectiveData = data.length === 0 ? defaultData : data;\r\n  // Determine the number of cards to display\r\n  const numCardsToShow = maxCards || effectiveData.length;\r\n  // Slice the data to limit the number of cards if necessary\r\n  const limitedData = effectiveData.slice(0, numCardsToShow);\r\n\r\n  const DetailScreen = ({ activeCard, closeDetailScreen, fetchComments, removeComment, rejectedComments }) => {\r\n    const [selectedComment, setSelectedComment] = useState(null);\r\n    const [showFullComment, setShowFullComment] = useState(false);\r\n    const [draftReply, setDraftReply] = useState(\"\");\r\n    const [generatedResponse, setGeneratedResponse] = useState(\"\");\r\n    const isCommentRejected = (comment) => rejectedComments.has(comment.id);\r\n  \r\n    const selectComment = (comment) => {\r\n      setSelectedComment(comment);\r\n      setShowFullComment(false);\r\n      setDraftReply(comment.response || \"\");\r\n    };\r\n    \r\n    const refreshComments = () => {\r\n      if (activeCard) {\r\n        fetchComments(activeCard.id, activeCard.username);\r\n      }\r\n    };\r\n\r\n    const handleShowMore = () => {\r\n      setShowFullComment(true);\r\n    };\r\n  \r\n    const handleDraftChange = (e) => {\r\n      setDraftReply(e.target.value);\r\n    };\r\n\r\n    const publishReply = () => {\r\n      console.log(\"Publishing reply:\", draftReply);\r\n      // Add logic to publish the reply\r\n    };\r\n  \r\n    const rejectReply = () => {\r\n      if (selectedComment && activeCard) {\r\n        setRejectedComments(prev => new Set([...prev, selectedComment.id]));\r\n        removeComment(activeCard.id, selectedComment);\r\n        setSelectedComment(null); // Reset selected comment\r\n      }\r\n    };    \r\n  \r\n    return (\r\n      <div className=\"detail-screen\">\r\n        <div className=\"comment-header\">\r\n          <h2>Post from {activeCard.date}</h2>\r\n          <div className=\"post-image-container\">\r\n            <img src={activeCard.imageUrl} alt=\"Post\" className=\"post-image\" />\r\n            <div className=\"post-image-text\">Some text next to the image</div>\r\n          </div>\r\n          <div className=\"comment-info\">\r\n            <div className=\"comment-counter\">{activeCard.comments.filter(comment => !rejectedComments.has(comment.id)).length} comments replied to\r\n             </div>\r\n            <button className=\"circle-button\" onClick={refreshComments}>\r\n              <img src=\"/Assets/reload.png\" className=\"reload\" alt=\"Close\" />\r\n            </button>\r\n          </div>\r\n          <button className=\"circle-button\" onClick={closeDetailScreen}>X</button>\r\n        </div>\r\n        <div className=\"content-body\">\r\n        <div className=\"comments-list\">\r\n          <h3>Comments</h3>\r\n          {activeCard.comments\r\n          .filter(comment => !isCommentRejected(comment))\r\n            .filter(comment => !rejectedComments.has(comment.id)) // potential error line\r\n            .map((comment, index) => {\r\n            return (\r\n              <div key={index} className={`comment-item ${selectedComment === comment ? 'highlighted' : ''}`}\r\n                  onClick={() => selectComment(comment)}>\r\n                <img src={comment.userImage} alt=\"User\" />\r\n                <div className=\"comment-username\">@{comment.username}</div>\r\n                <div className=\"separator\">| </div>\r\n                <div className=\"comment-text\">{comment.comment}</div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n          <div className=\"comment-detail\">\r\n            {selectedComment ? (\r\n                <>\r\n                <div className=\"comment-detail-header\">\r\n                  <img src={selectedComment.userImage} alt=\"User\" className=\"comment-user-image\" />\r\n                  <span>@{selectedComment.username}</span>\r\n                </div>\r\n                <div className=\"comment-detail-title\">\r\n                  <h2>Commented:</h2>\r\n                </div>\r\n                <p className=\"comment-text\">\r\n                {showFullComment || (selectedComment.comment.length <= 250)\r\n                    ? `\"${selectedComment.comment}\"`\r\n                    : `\"${selectedComment.comment.substring(0, 247)}...\"`\r\n                  }\r\n                  {!showFullComment && selectedComment.comment.length > 250 && (\r\n                    <button onClick={handleShowMore}>Show more</button>\r\n                  )}\r\n                </p>\r\n                <div className=\"draft-reply-container\">\r\n                  <div className=\"draft-reply-header\">\r\n                    {/* <img src=\"/Assets/def_pfp.jpg\" alt=\"Reply Icon\" /> */}\r\n                    <span>Your reply draft:</span>\r\n                  </div>\r\n                  <textarea\r\n                    value={draftReply}\r\n                    onChange={handleDraftChange}\r\n                    placeholder=\"Type your reply...\"\r\n                  />\r\n                  <div className=\"draft-reply-actions\">\r\n                    <button className=\"reject-button\" onClick={rejectReply}>Reject ✖</button>\r\n                    <button className=\"publish-button\" onClick={publishReply}>Publish ✈</button>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <p>Select a comment to view details</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <LoadingOverlay />} {/* Loading overlay */}\r\n      {activeCard ? (\r\n        <DetailScreen \r\n          activeCard={activeCard} \r\n          closeDetailScreen={closeDetailScreen} \r\n          fetchComments={fetchComments}\r\n          removeComment={removeComment}\r\n          rejectedComments={rejectedComments}\r\n          />\r\n      ) : (\r\n      <div className=\"card-container\">\r\n      <div className=\"refresh-button\">\r\n          <button onClick={fetchMedia}>\r\n          <span> Refresh feed </span>\r\n          <img src=\"/Assets/refresh_red.png\" className=\"reload\" />\r\n          </button>\r\n          <div className=\"tooltip\">\r\n                  <span className=\"tooltip-icon\">?</span>\r\n                  <span className=\"tooltip-text\">A process is a set of structured activities and tasks performed to achieve a specific goal.</span>\r\n          </div>\r\n      </div>\r\n        {limitedData.length > 0 ? limitedData.map((item, index) => (\r\n          <div key={item.id || index} className=\"card\">\r\n            {/* Card Header */}\r\n            <div className=\"card-header\">\r\n            <span className=\"counter-box\">\r\n              {item.comments.filter(comment => !rejectedComments.has(comment.id)).length}\r\n            </span>\r\n              <h2> Comments replied </h2>\r\n              <button className=\"circle-button\" onClick={() => fetchComments(item.id, item.username)}>\r\n                <img src=\"/Assets/reload.png\" className=\"reload\" />\r\n              </button>\r\n            </div>\r\n            {/* Card Content */}\r\n            <div className=\"card-content\">\r\n              {/* Image on the left */}\r\n              <img src={item.imageUrl} alt=\"Post\" className=\"card-image\" />\r\n\r\n              {/* Text and Button on the right */}\r\n              <div className=\"card-text\">\r\n                <div>\r\n                  <h4>Post Date:</h4>\r\n                  <p className=\"card-date\">{item.date}</p>\r\n                </div>\r\n                \r\n                <button className=\"card-button\" onClick={() => handleCardButtonClick(item)}>\r\n                    Review {item.comments.filter(comment => !rejectedComments.has(comment.id)).length} Draft Replies >\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )) : (\r\n          <div className=\"empty-screen\">\r\n            <h1>No content!</h1>\r\n            <p>Your content will appear here when available.</p>\r\n            {/* <img src=\"/Assets/def_pfp.jpg\" alt=\"Descriptive Alt Text\" /> */}\r\n            <button onClick={fetchMedia}>Get Content</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}