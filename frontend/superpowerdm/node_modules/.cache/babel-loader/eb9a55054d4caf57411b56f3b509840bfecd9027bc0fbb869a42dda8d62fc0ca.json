{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\riadd\\\\Documents\\\\GitHub\\\\SuperpowerDM\\\\frontend\\\\superpowerdm\\\\src\\\\Components\\\\cards.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// const defaultData = [];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultData = [{\n  id: '1806821234567854',\n  imageUrl: 'https://picsum.photos/id/237/1080/1080',\n  date: '2023-12-09T21:35:36+0000',\n  username: 'user1',\n  comments: [{\n    username: 'commenter1',\n    comment: 'Great post!'\n  }, {\n    username: 'commenter2',\n    comment: 'Love this!'\n  }]\n}, {\n  id: '179887602982372',\n  imageUrl: 'https://picsum.photos/id/7/1080/1920',\n  date: '2023-12-09T21:32:54+0000',\n  username: 'user2',\n  comments: [{\n    username: 'commenter3',\n    comment: 'Amazing content!'\n  }, {\n    username: 'commenter4',\n    comment: 'Really nice picture.'\n  }]\n}, {\n  id: '17901198953067',\n  imageUrl: 'https://picsum.photos/id/63/1080/1080',\n  date: '2023-11-16T14:51:08+0000',\n  username: 'user3',\n  comments: [{\n    username: 'commenter5',\n    comment: 'This is awesome!'\n  }]\n}, {\n  id: '17987708884506',\n  imageUrl: 'https://picsum.photos/id/16/1080/1920',\n  date: '2023-11-03T16:16:05+0000',\n  username: 'user4',\n  comments: [{\n    username: 'commenter1',\n    comment: 'I like this post a lot.'\n  }, {\n    username: 'commenter7',\n    comment: 'Great job!'\n  }, {\n    username: 'commenter8',\n    comment: 'Very cool!'\n  }]\n}, {\n  id: '1823344558749012',\n  imageUrl: 'https://picsum.photos/id/5/1080/1080',\n  date: '2023-10-25T10:30:21+0000',\n  username: 'user5',\n  comments: [{\n    username: 'commenter9',\n    comment: 'Superb!'\n  }, {\n    username: 'commenter10',\n    comment: 'Inspiring work.'\n  }]\n}, {\n  id: '17651127890987654',\n  imageUrl: 'https://picsum.photos/id/59/1080/1080',\n  date: '2023-10-20T08:15:45+0000',\n  username: 'user6',\n  comments: [{\n    username: 'commenter11',\n    comment: 'Fantastic!'\n  }, {\n    username: 'commenter12',\n    comment: 'Wow, this is great!'\n  }]\n}, {\n  id: '176543677654',\n  imageUrl: 'https://picsum.photos/id/59/1080/1080',\n  date: '2023-10-20T08:15:45+0000',\n  username: 'user6',\n  comments: [{\n    username: 'commenter11',\n    comment: 'Fantastic!'\n  }, {\n    username: 'commenter12',\n    comment: 'Wow, this is great!'\n  }]\n}];\nconst LoadingOverlay = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000 // Ensure it's above everything else\n  },\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontSize: '2rem',\n      color: 'white'\n    },\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 78,\n  columnNumber: 3\n}, this);\n_c = LoadingOverlay;\nconst CardComponent = ({\n  maxCards\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [data, setData] = useState(() => {\n    const savedData = localStorage.getItem('defaultData');\n    return savedData ? JSON.parse(savedData) : defaultData;\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [displayedComments, setDisplayedComments] = useState({});\n  const [rejectedComments, setRejectedComments] = useState(() => {\n    const savedRejectedComments = localStorage.getItem('rejectedComments');\n    return savedRejectedComments ? new Set(JSON.parse(savedRejectedComments)) : new Set();\n  });\n  const [repliedComments, setRepliedComments] = useState(() => {\n    const savedRepliedComments = localStorage.getItem('repliedComments');\n    return savedRepliedComments ? new Set(JSON.parse(savedRepliedComments)) : new Set();\n  });\n  const [activeCard, setActiveCard] = useState(null);\n  const initializeCountdown = () => {\n    const disabledTime = localStorage.getItem('disabledTime');\n    if (disabledTime) {\n      const now = new Date().getTime();\n      const remainingTime = 300 - Math.floor((now - parseInt(disabledTime)) / 1000);\n      return remainingTime > 0 ? remainingTime : 0;\n    }\n    return 0;\n  };\n  const [isButtonDisabled, setIsButtonDisabled] = useState(initializeCountdown() > 0);\n  const [countdown, setCountdown] = useState(initializeCountdown());\n  useEffect(() => {\n    localStorage.setItem('defaultData', JSON.stringify(data));\n  }, [data]);\n  useEffect(() => {\n    localStorage.setItem('rejectedComments', JSON.stringify(Array.from(rejectedComments)));\n  }, [rejectedComments]);\n  useEffect(() => {\n    localStorage.setItem('repliedComments', JSON.stringify(Array.from(repliedComments)));\n  }, [repliedComments]);\n  const fetchMedia = async () => {\n    setIsLoading(true);\n    setIsButtonDisabled(true);\n    try {\n      // Start the fetch operation\n      const response = await fetch('/fetch_media', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const jsonData = await response.json();\n      setIsLoading(false); // Set loading to false as soon as the server responds\n      setIsButtonDisabled(false);\n      const transformedData = jsonData.map(item => ({\n        imageUrl: item.media_url,\n        date: item.timestamp,\n        id: item.id,\n        username: item.username,\n        comments: [],\n        commentsFetched: false\n      }));\n      let updatedActiveCardExists = false;\n      const updatedData = transformedData.map(newItem => {\n        const existingItem = data.find(oldItem => oldItem.id === newItem.id);\n        if (existingItem) {\n          if (activeCard && activeCard.id === existingItem.id) {\n            updatedActiveCardExists = true;\n          }\n          return {\n            ...newItem,\n            comments: existingItem.comments,\n            commentsFetched: existingItem.commentsFetched\n          };\n        }\n        return newItem;\n      });\n      setData(updatedData);\n      if (!updatedActiveCardExists) {\n        setActiveCard(null); // Set active card to null if no previously active card exists in the updated data\n      }\n    } catch (error) {\n      console.error('Error fetching media:', error);\n    } finally {\n      setIsButtonDisabled(false);\n    }\n  };\n  const fetchComments = async (mediaId, username, isActiveCard = false) => {\n    try {\n      const response = await fetch('/fetch_comments', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          media_id: mediaId,\n          username: username\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      let newComments = await response.json();\n      newComments = newComments.filter(comment => !rejectedComments.has(comment.id) && !repliedComments.has(comment.id));\n      setData(prevData => prevData.map(item => {\n        if (item.id === mediaId) {\n          const existingCommentIds = new Set(item.comments.map(c => c.id));\n          const filteredComments = newComments.filter(comment => !existingCommentIds.has(comment.id));\n          return {\n            ...item,\n            comments: [...item.comments, ...filteredComments]\n          };\n        }\n        return item;\n      }));\n      if (isActiveCard) {\n        setActiveCard(prevActiveCard => {\n          if (prevActiveCard && prevActiveCard.id === mediaId) {\n            return {\n              ...prevActiveCard,\n              comments: newComments\n            };\n          }\n          return prevActiveCard;\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n    }\n  };\n  const removeComment = (mediaId, commentToRemove) => {\n    setRejectedComments(prev => {\n      const newSet = new Set([...prev, commentToRemove.id]);\n      localStorage.setItem('rejectedComments', JSON.stringify(Array.from(newSet))); // Save to localStorage\n      return newSet;\n    });\n    setData(prevData => prevData.map(item => {\n      if (item.id === mediaId) {\n        const updatedComments = item.comments.filter(comment => comment.id !== commentToRemove.id);\n        return {\n          ...item,\n          comments: updatedComments\n        };\n      }\n      return item;\n    }));\n  };\n  const handleCardButtonClick = async card => {\n    setIsLoading(true); // Start loading\n\n    try {\n      if (card.comments && card.comments.length > 0) {\n        await submitComments(card.comments);\n\n        // After submitComments, find the updated card in your state\n        setData(prevData => {\n          const updatedData = prevData.map(post => {\n            if (post.id === card.id) {\n              setActiveCard(post); // Set the updated card as active\n              return {\n                ...post\n              };\n            }\n            return post;\n          });\n          return updatedData;\n        });\n      }\n    } catch (error) {\n      console.error('Error in handleCardButtonClick:', error);\n    } finally {\n      setIsLoading(false); // Stop loading\n    }\n  };\n\n  const closeDetailScreen = () => {\n    setActiveCard(null);\n  };\n  const updateCommentsWithResponses = responseData => {\n    setData(prevData => {\n      const updatedData = prevData.map(post => ({\n        ...post,\n        comments: post.comments.map(comment => {\n          const responseEntry = responseData.find(response => response.id === comment.id);\n          return responseEntry ? {\n            ...comment,\n            response: responseEntry.response\n          } : comment;\n        })\n      }));\n      console.log(\"Updated data with responses:\", updatedData);\n      return updatedData;\n    });\n  };\n  const submitComments = async comments => {\n    try {\n      // Filter out comments that already have a response\n      const commentsWithoutResponse = comments.filter(comment => !comment.response);\n      if (commentsWithoutResponse.length === 0) {\n        console.log(\"No new comments to process\");\n        return;\n      }\n\n      // Prepare the payload: include both comment text and id\n      const payload = commentsWithoutResponse.map(comment => ({\n        id: comment.id,\n        comment: comment.comment\n      }));\n      const response = await fetch('/submit_comments', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const responseData = await response.json();\n      updateCommentsWithResponses(responseData);\n    } catch (error) {\n      console.error('Error submitting comments:', error);\n    }\n  };\n\n  // Check if data is empty, and if so, use defaultData\n  const effectiveData = data.length === 0 ? defaultData : data;\n  // Determine the number of cards to display\n  const numCardsToShow = maxCards || effectiveData.length;\n  // Slice the data to limit the number of cards if necessary\n  const limitedData = effectiveData.slice(0, numCardsToShow);\n  const DetailScreen = ({\n    activeCard,\n    closeDetailScreen,\n    fetchComments,\n    removeComment,\n    rejectedComments\n  }) => {\n    _s();\n    const [selectedComment, setSelectedComment] = useState(null);\n    const [showFullComment, setShowFullComment] = useState(false);\n    const [draftReply, setDraftReply] = useState(\"\");\n    const [generatedResponse, setGeneratedResponse] = useState(\"\");\n    const isCommentRejected = comment => rejectedComments.has(comment.id);\n    const selectComment = comment => {\n      setSelectedComment(comment);\n      setShowFullComment(false);\n      setDraftReply(comment.response || \"\");\n    };\n    const refreshComments = async () => {\n      if (activeCard) {\n        await fetchComments(activeCard.id, activeCard.username);\n\n        // After fetching new comments, check if the previously selected comment still exists\n        if (selectedComment) {\n          const updatedComment = activeCard.comments.find(comment => comment.id === selectedComment.id);\n          if (updatedComment) {\n            setSelectedComment(updatedComment); // Reselect the comment if it exists\n          } else {\n            setSelectedComment(null); // Deselect if the comment no longer exists\n          }\n        }\n      }\n    };\n\n    const handleShowMore = () => {\n      setShowFullComment(true);\n    };\n    const handleDraftChange = e => {\n      setDraftReply(e.target.value);\n    };\n    const rejectReply = () => {\n      if (selectedComment && activeCard) {\n        setRejectedComments(prev => new Set([...prev, selectedComment.id]));\n        removeComment(activeCard.id, selectedComment);\n        setSelectedComment(null); // Reset selected comment\n      }\n    };\n\n    const publishReply = async () => {\n      console.log(\"Publishing reply:\", draftReply);\n      if (!selectedComment) {\n        console.error(\"No comment selected\");\n        return;\n      }\n      const payload = {\n        commentId: selectedComment.id,\n        reply: draftReply\n      };\n      try {\n        const response = await fetch('/publish_reply', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const responseData = await response.json();\n        console.log(\"Reply published:\", responseData);\n        setRepliedComments(prev => {\n          const newSet = new Set([...prev, selectedComment.id]);\n          localStorage.setItem('repliedComments', JSON.stringify(Array.from(newSet)));\n          return newSet;\n        });\n        if (activeCard) {\n          const updatedComments = activeCard.comments.filter(comment => comment.id !== selectedComment.id);\n          setActiveCard({\n            ...activeCard,\n            comments: updatedComments\n          });\n          setData(prevData => prevData.map(item => {\n            if (item.id === activeCard.id) {\n              return {\n                ...item,\n                comments: updatedComments\n              };\n            }\n            return item;\n          }));\n        }\n        setSelectedComment(null);\n        setDraftReply(\"\");\n      } catch (error) {\n        console.error('Error publishing reply:', error);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Post from \", activeCard.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-image-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: activeCard.imageUrl,\n            alt: \"Post\",\n            className: \"post-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-image-text\",\n            children: \"Some text next to the image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-counter\",\n            children: [activeCard.comments.filter(comment => !rejectedComments.has(comment.id) && repliedComments.has(comment.id)).length, \"/\", activeCard.comments.filter(comment => !rejectedComments.has(comment.id)).length, \" comments replied to\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"circle-button\",\n            onClick: refreshComments,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/Assets/reload.png\",\n              className: \"reload\",\n              alt: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"circle-button\",\n          onClick: closeDetailScreen,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 11\n          }, this), activeCard.comments.filter(comment => !isCommentRejected(comment)).filter(comment => !rejectedComments.has(comment.id)) // potential error line\n          .map((comment, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `comment-item ${selectedComment === comment ? 'highlighted' : ''}`,\n              onClick: () => selectComment(comment),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: comment.userImage,\n                alt: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-username\",\n                children: [\"@\", comment.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"separator\",\n                children: \"| \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-text\",\n                children: comment.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-detail\",\n          children: selectedComment ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-detail-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: selectedComment.userImage,\n                alt: \"User\",\n                className: \"comment-user-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"@\", selectedComment.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-detail-title\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Commented:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"comment-text\",\n              children: [showFullComment || selectedComment.comment.length <= 250 ? `\"${selectedComment.comment}\"` : `\"${selectedComment.comment.substring(0, 247)}...\"`, !showFullComment && selectedComment.comment.length > 250 && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleShowMore,\n                children: \"Show more\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"draft-reply-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"draft-reply-header\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Your reply draft:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: draftReply,\n                onChange: handleDraftChange,\n                placeholder: \"Type your reply...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"draft-reply-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"reject-button\",\n                  onClick: rejectReply,\n                  children: \"Reject \\u2716\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"publish-button\",\n                  onClick: publishReply,\n                  children: \"Publish \\u2708\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select a comment to view details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this);\n  };\n  _s(DetailScreen, \"puiv+kSz2top2lLhcP7p1S/i7iI=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 21\n    }, this), \" \", activeCard ? /*#__PURE__*/_jsxDEV(DetailScreen, {\n      activeCard: activeCard,\n      closeDetailScreen: closeDetailScreen,\n      fetchComments: fetchComments,\n      removeComment: removeComment,\n      rejectedComments: rejectedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"refresh-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: isLoading ? {\n            backgroundColor: 'grey',\n            cursor: 'not-allowed'\n          } : {\n            backgroundColor: 'red',\n            cursor: 'pointer'\n          },\n          disabled: isButtonDisabled,\n          onClick: fetchMedia,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" Refresh feed \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/Assets/refresh_red.png\",\n            className: \"reload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tooltip\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tooltip-icon\",\n            children: \"?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tooltip-text\",\n            children: \"A process is a set of structured activities and tasks performed to achieve a specific goal.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 7\n      }, this), limitedData.length > 0 ? limitedData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"counter-box\",\n            children: [item.comments.filter(comment => !rejectedComments.has(comment.id) && repliedComments.has(comment.id)).length, \"/\", item.comments.filter(comment => !rejectedComments.has(comment.id)).length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Comments replied \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"circle-button\",\n            onClick: () => fetchComments(item.id, item.username),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/Assets/reload.png\",\n              className: \"reload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.imageUrl,\n            alt: \"Post\",\n            className: \"card-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Post Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-date\",\n                children: item.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"card-button\",\n              onClick: () => handleCardButtonClick(item),\n              children: [\"Review \", item.comments.filter(comment => !rejectedComments.has(comment.id)).length, \" Draft Replies >\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 13\n        }, this)]\n      }, item.id || index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No content!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your content will appear here when available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchMedia,\n          children: \"Get Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 524,\n    columnNumber: 5\n  }, this);\n};\n_s2(CardComponent, \"wGM4B0eISb5TiLkV6EOtMfxRIu0=\");\n_c2 = CardComponent;\nexport default CardComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoadingOverlay\");\n$RefreshReg$(_c2, \"CardComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultData","id","imageUrl","date","username","comments","comment","LoadingOverlay","style","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","children","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","CardComponent","maxCards","_s2","_s","$RefreshSig$","data","setData","savedData","localStorage","getItem","JSON","parse","isLoading","setIsLoading","displayedComments","setDisplayedComments","rejectedComments","setRejectedComments","savedRejectedComments","Set","repliedComments","setRepliedComments","savedRepliedComments","activeCard","setActiveCard","initializeCountdown","disabledTime","now","Date","getTime","remainingTime","Math","floor","parseInt","isButtonDisabled","setIsButtonDisabled","countdown","setCountdown","setItem","stringify","Array","from","fetchMedia","response","fetch","method","headers","ok","Error","status","jsonData","json","transformedData","map","item","media_url","timestamp","commentsFetched","updatedActiveCardExists","updatedData","newItem","existingItem","find","oldItem","error","console","fetchComments","mediaId","isActiveCard","body","media_id","newComments","filter","has","prevData","existingCommentIds","c","filteredComments","prevActiveCard","removeComment","commentToRemove","prev","newSet","updatedComments","handleCardButtonClick","card","length","submitComments","post","closeDetailScreen","updateCommentsWithResponses","responseData","responseEntry","log","commentsWithoutResponse","payload","effectiveData","numCardsToShow","limitedData","slice","DetailScreen","selectedComment","setSelectedComment","showFullComment","setShowFullComment","draftReply","setDraftReply","generatedResponse","setGeneratedResponse","isCommentRejected","selectComment","refreshComments","updatedComment","handleShowMore","handleDraftChange","e","target","value","rejectReply","publishReply","commentId","reply","className","src","alt","onClick","index","userImage","substring","onChange","placeholder","cursor","disabled","_c2","$RefreshReg$"],"sources":["C:/Users/riadd/Documents/GitHub/SuperpowerDM/frontend/superpowerdm/src/Components/cards.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// const defaultData = [];\r\n\r\nconst defaultData = [\r\n  {\r\n    id: '1806821234567854',\r\n    imageUrl: 'https://picsum.photos/id/237/1080/1080',\r\n    date: '2023-12-09T21:35:36+0000',\r\n    username: 'user1',\r\n    comments: [\r\n      { username: 'commenter1', comment: 'Great post!' },\r\n      { username: 'commenter2', comment: 'Love this!' }\r\n    ]\r\n  },\r\n  {\r\n    id: '179887602982372',\r\n    imageUrl: 'https://picsum.photos/id/7/1080/1920',\r\n    date: '2023-12-09T21:32:54+0000',\r\n    username: 'user2',\r\n    comments: [\r\n      { username: 'commenter3', comment: 'Amazing content!' },\r\n      { username: 'commenter4', comment: 'Really nice picture.' }\r\n    ]\r\n  },\r\n  {\r\n    id: '17901198953067',\r\n    imageUrl: 'https://picsum.photos/id/63/1080/1080',\r\n    date: '2023-11-16T14:51:08+0000',\r\n    username: 'user3',\r\n    comments: [\r\n      { username: 'commenter5', comment: 'This is awesome!' }\r\n    ]\r\n  },\r\n  {\r\n    id: '17987708884506',\r\n    imageUrl: 'https://picsum.photos/id/16/1080/1920',\r\n    date: '2023-11-03T16:16:05+0000',\r\n    username: 'user4',\r\n    comments: [\r\n      { username: 'commenter1', comment: 'I like this post a lot.' },\r\n      { username: 'commenter7', comment: 'Great job!' },\r\n      { username: 'commenter8', comment: 'Very cool!' }\r\n    ]\r\n  },\r\n  {\r\n    id: '1823344558749012',\r\n    imageUrl: 'https://picsum.photos/id/5/1080/1080',\r\n    date: '2023-10-25T10:30:21+0000',\r\n    username: 'user5',\r\n    comments: [\r\n      { username: 'commenter9', comment: 'Superb!' },\r\n      { username: 'commenter10', comment: 'Inspiring work.' }\r\n    ]\r\n  },\r\n  {\r\n    id: '17651127890987654',\r\n    imageUrl: 'https://picsum.photos/id/59/1080/1080',\r\n    date: '2023-10-20T08:15:45+0000',\r\n    username: 'user6',\r\n    comments: [\r\n      { username: 'commenter11', comment: 'Fantastic!' },\r\n      { username: 'commenter12', comment: 'Wow, this is great!' }\r\n    ]\r\n  },\r\n  {\r\n    id: '176543677654',\r\n    imageUrl: 'https://picsum.photos/id/59/1080/1080',\r\n    date: '2023-10-20T08:15:45+0000',\r\n    username: 'user6',\r\n    comments: [\r\n      { username: 'commenter11', comment: 'Fantastic!' },\r\n      { username: 'commenter12', comment: 'Wow, this is great!' }\r\n    ]\r\n  },\r\n];\r\nconst LoadingOverlay = () => (\r\n  <div style={{\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    zIndex: 1000 // Ensure it's above everything else\r\n  }}>\r\n    <div style={{ fontSize: '2rem', color: 'white' }}>Loading...</div>\r\n  </div>\r\n);\r\n\r\nconst CardComponent = ({maxCards}) => {\r\n  const [data, setData] = useState(() => {\r\n    const savedData = localStorage.getItem('defaultData');\r\n    return savedData ? JSON.parse(savedData) : defaultData;\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [displayedComments, setDisplayedComments] = useState({});\r\n  const [rejectedComments, setRejectedComments] = useState(() => {\r\n    const savedRejectedComments = localStorage.getItem('rejectedComments');\r\n    return savedRejectedComments ? new Set(JSON.parse(savedRejectedComments)) : new Set();\r\n  });\r\n  const [repliedComments, setRepliedComments] = useState(() => {\r\n    const savedRepliedComments = localStorage.getItem('repliedComments');\r\n    return savedRepliedComments ? new Set(JSON.parse(savedRepliedComments)) : new Set();\r\n  });\r\n  const [activeCard, setActiveCard] = useState(null);\r\n\r\n  const initializeCountdown = () => {\r\n    const disabledTime = localStorage.getItem('disabledTime');\r\n    if (disabledTime) {\r\n      const now = new Date().getTime();\r\n      const remainingTime = 300 - Math.floor((now - parseInt(disabledTime)) / 1000);\r\n      return remainingTime > 0 ? remainingTime : 0;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(initializeCountdown() > 0);\r\n  const [countdown, setCountdown] = useState(initializeCountdown());\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('defaultData', JSON.stringify(data));\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('rejectedComments', JSON.stringify(Array.from(rejectedComments)));\r\n  }, [rejectedComments]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('repliedComments', JSON.stringify(Array.from(repliedComments)));\r\n  }, [repliedComments]);\r\n\r\n  const fetchMedia = async () => {\r\n    setIsLoading(true);\r\n    setIsButtonDisabled(true);\r\n\r\n    try {\r\n      // Start the fetch operation\r\n      const response = await fetch('/fetch_media', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n\r\n      const jsonData = await response.json();\r\n      setIsLoading(false); // Set loading to false as soon as the server responds\r\n      setIsButtonDisabled(false);\r\n\r\n      const transformedData = jsonData.map(item => ({\r\n        imageUrl: item.media_url,\r\n        date: item.timestamp,\r\n        id: item.id,\r\n        username: item.username,\r\n        comments: [],\r\n        commentsFetched: false\r\n      }));\r\n\r\n      let updatedActiveCardExists = false;\r\n      const updatedData = transformedData.map(newItem => {\r\n        const existingItem = data.find(oldItem => oldItem.id === newItem.id);\r\n        if (existingItem) {\r\n          if (activeCard && activeCard.id === existingItem.id) {\r\n            updatedActiveCardExists = true;\r\n          }\r\n          return { ...newItem, comments: existingItem.comments, commentsFetched: existingItem.commentsFetched };\r\n        }\r\n        return newItem;\r\n      });\r\n\r\n      setData(updatedData);\r\n      if (!updatedActiveCardExists) {\r\n        setActiveCard(null); // Set active card to null if no previously active card exists in the updated data\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching media:', error);\r\n    } finally {\r\n      setIsButtonDisabled(false);\r\n    }\r\n  };\r\n\r\n\r\n  const fetchComments = async (mediaId, username, isActiveCard = false) => {\r\n    try {\r\n      const response = await fetch('/fetch_comments', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ media_id: mediaId, username: username })\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n  \r\n      let newComments = await response.json();\r\n      newComments = newComments.filter(comment => \r\n        !rejectedComments.has(comment.id) && !repliedComments.has(comment.id)\r\n      );\r\n  \r\n      setData(prevData => prevData.map(item => {\r\n        if (item.id === mediaId) {\r\n          const existingCommentIds = new Set(item.comments.map(c => c.id));\r\n          const filteredComments = newComments.filter(comment => !existingCommentIds.has(comment.id));\r\n          return { ...item, comments: [...item.comments, ...filteredComments] };\r\n        }\r\n        return item;\r\n      }));\r\n  \r\n      if (isActiveCard) {\r\n        setActiveCard(prevActiveCard => {\r\n          if (prevActiveCard && prevActiveCard.id === mediaId) {\r\n            return { ...prevActiveCard, comments: newComments };\r\n          }\r\n          return prevActiveCard;\r\n        });\r\n      }\r\n  \r\n    } catch (error) {\r\n      console.error('Error fetching comments:', error);\r\n    }\r\n  };  \r\n  \r\n\r\n  const removeComment = (mediaId, commentToRemove) => {\r\n    setRejectedComments(prev => {\r\n      const newSet = new Set([...prev, commentToRemove.id]);\r\n      localStorage.setItem('rejectedComments', JSON.stringify(Array.from(newSet))); // Save to localStorage\r\n      return newSet;\r\n    });\r\n  \r\n    setData(prevData => prevData.map(item => {\r\n      if (item.id === mediaId) {\r\n        const updatedComments = item.comments.filter(comment => comment.id !== commentToRemove.id);\r\n        return { ...item, comments: updatedComments };\r\n      }\r\n      return item;\r\n    }));\r\n  }; \r\n\r\n  const handleCardButtonClick = async (card) => {\r\n    setIsLoading(true); // Start loading\r\n  \r\n    try {\r\n      if (card.comments && card.comments.length > 0) {\r\n        await submitComments(card.comments);\r\n  \r\n        // After submitComments, find the updated card in your state\r\n        setData(prevData => {\r\n          const updatedData = prevData.map(post => {\r\n            if (post.id === card.id) {\r\n              setActiveCard(post); // Set the updated card as active\r\n              return { ...post };\r\n            }\r\n            return post;\r\n          });\r\n          return updatedData;\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in handleCardButtonClick:', error);\r\n    } finally {\r\n      setIsLoading(false); // Stop loading\r\n    }\r\n  };\r\n  \r\n    \r\n\r\n  const closeDetailScreen = () => {\r\n    setActiveCard(null);\r\n  };\r\n\r\n  const updateCommentsWithResponses = (responseData) => {\r\n    setData(prevData => {\r\n      const updatedData = prevData.map(post => ({\r\n        ...post,\r\n        comments: post.comments.map(comment => {\r\n          const responseEntry = responseData.find(response => response.id === comment.id);\r\n          return responseEntry \r\n            ? { ...comment, response: responseEntry.response }\r\n            : comment;\r\n        })\r\n      }));\r\n      console.log(\"Updated data with responses:\", updatedData);\r\n      return updatedData;\r\n    });\r\n  };\r\n  \r\n\r\n  const submitComments = async (comments) => {\r\n    try {\r\n      // Filter out comments that already have a response\r\n      const commentsWithoutResponse = comments.filter(comment => !comment.response);\r\n  \r\n      if (commentsWithoutResponse.length === 0) {\r\n        console.log(\"No new comments to process\");\r\n        return;\r\n      }\r\n  \r\n      // Prepare the payload: include both comment text and id\r\n      const payload = commentsWithoutResponse.map(comment => ({\r\n        id: comment.id,\r\n        comment: comment.comment\r\n      }));\r\n  \r\n      const response = await fetch('/submit_comments', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n  \r\n      const responseData = await response.json();\r\n      updateCommentsWithResponses(responseData);\r\n\r\n  \r\n    } catch (error) {\r\n      console.error('Error submitting comments:', error);\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n  // Check if data is empty, and if so, use defaultData\r\n  const effectiveData = data.length === 0 ? defaultData : data;\r\n  // Determine the number of cards to display\r\n  const numCardsToShow = maxCards || effectiveData.length;\r\n  // Slice the data to limit the number of cards if necessary\r\n  const limitedData = effectiveData.slice(0, numCardsToShow);\r\n\r\n  const DetailScreen = ({ activeCard, closeDetailScreen, fetchComments, removeComment, rejectedComments }) => {\r\n    const [selectedComment, setSelectedComment] = useState(null);\r\n    const [showFullComment, setShowFullComment] = useState(false);\r\n    const [draftReply, setDraftReply] = useState(\"\");\r\n    const [generatedResponse, setGeneratedResponse] = useState(\"\");\r\n    const isCommentRejected = (comment) => rejectedComments.has(comment.id);\r\n\r\n    const selectComment = (comment) => {\r\n      setSelectedComment(comment);\r\n      setShowFullComment(false);\r\n      setDraftReply(comment.response || \"\");\r\n    };\r\n    \r\n    const refreshComments = async () => {\r\n      if (activeCard) {\r\n        await fetchComments(activeCard.id, activeCard.username);\r\n    \r\n        // After fetching new comments, check if the previously selected comment still exists\r\n        if (selectedComment) {\r\n          const updatedComment = activeCard.comments.find(comment => comment.id === selectedComment.id);\r\n          if (updatedComment) {\r\n            setSelectedComment(updatedComment); // Reselect the comment if it exists\r\n          } else {\r\n            setSelectedComment(null); // Deselect if the comment no longer exists\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    const handleShowMore = () => {\r\n      setShowFullComment(true);\r\n    };\r\n  \r\n    const handleDraftChange = (e) => {\r\n      setDraftReply(e.target.value);\r\n    };\r\n  \r\n    const rejectReply = () => {\r\n      if (selectedComment && activeCard) {\r\n        setRejectedComments(prev => new Set([...prev, selectedComment.id]));\r\n        removeComment(activeCard.id, selectedComment);\r\n        setSelectedComment(null); // Reset selected comment\r\n      }\r\n    };    \r\n\r\n    const publishReply = async () => {\r\n      console.log(\"Publishing reply:\", draftReply);\r\n    \r\n      if (!selectedComment) {\r\n        console.error(\"No comment selected\");\r\n        return;\r\n      }\r\n    \r\n      const payload = {\r\n        commentId: selectedComment.id,\r\n        reply: draftReply\r\n      };\r\n    \r\n      try {\r\n        const response = await fetch('/publish_reply', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(payload),\r\n        });\r\n    \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n    \r\n        const responseData = await response.json();\r\n        console.log(\"Reply published:\", responseData);\r\n    \r\n        setRepliedComments(prev => {\r\n          const newSet = new Set([...prev, selectedComment.id]);\r\n          localStorage.setItem('repliedComments', JSON.stringify(Array.from(newSet)));\r\n          return newSet;\r\n        });\r\n    \r\n        if (activeCard) {\r\n          const updatedComments = activeCard.comments.filter(comment => comment.id !== selectedComment.id);\r\n          setActiveCard({...activeCard, comments: updatedComments});\r\n    \r\n          setData(prevData => prevData.map(item => {\r\n            if (item.id === activeCard.id) {\r\n              return { ...item, comments: updatedComments };\r\n            }\r\n            return item;\r\n          }));\r\n        }\r\n    \r\n        setSelectedComment(null);\r\n        setDraftReply(\"\");\r\n      } catch (error) {\r\n        console.error('Error publishing reply:', error);\r\n      }\r\n    };\r\n    \r\n  \r\n    return (\r\n      <div className=\"detail-screen\">\r\n        <div className=\"comment-header\">\r\n          <h2>Post from {activeCard.date}</h2>\r\n          <div className=\"post-image-container\">\r\n            <img src={activeCard.imageUrl} alt=\"Post\" className=\"post-image\" />\r\n            <div className=\"post-image-text\">Some text next to the image</div>\r\n          </div>\r\n          <div className=\"comment-info\">\r\n            <div className=\"comment-counter\">{activeCard.comments.filter(comment => !rejectedComments.has(comment.id) && repliedComments.has(comment.id)).length}/{activeCard.comments.filter(comment => !rejectedComments.has(comment.id)).length} comments replied to\r\n             </div>\r\n            <button className=\"circle-button\" onClick={refreshComments}>\r\n              <img src=\"/Assets/reload.png\" className=\"reload\" alt=\"Close\" />\r\n            </button>\r\n          </div>\r\n          <button className=\"circle-button\" onClick={closeDetailScreen}>X</button>\r\n        </div>\r\n        <div className=\"content-body\">\r\n        <div className=\"comments-list\">\r\n          <h3>Comments</h3>\r\n          {activeCard.comments\r\n          .filter(comment => !isCommentRejected(comment))\r\n            .filter(comment => !rejectedComments.has(comment.id)) // potential error line\r\n            .map((comment, index) => {\r\n            return (\r\n              <div key={index} className={`comment-item ${selectedComment === comment ? 'highlighted' : ''}`}\r\n                  onClick={() => selectComment(comment)}>\r\n                <img src={comment.userImage} alt=\"User\" />\r\n                <div className=\"comment-username\">@{comment.username}</div>\r\n                <div className=\"separator\">| </div>\r\n                <div className=\"comment-text\">{comment.comment}</div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n          <div className=\"comment-detail\">\r\n            {selectedComment ? (\r\n                <>\r\n                <div className=\"comment-detail-header\">\r\n                  <img src={selectedComment.userImage} alt=\"User\" className=\"comment-user-image\" />\r\n                  <span>@{selectedComment.username}</span>\r\n                </div>\r\n                <div className=\"comment-detail-title\">\r\n                  <h2>Commented:</h2>\r\n                </div>\r\n                <p className=\"comment-text\">\r\n                {showFullComment || (selectedComment.comment.length <= 250)\r\n                    ? `\"${selectedComment.comment}\"`\r\n                    : `\"${selectedComment.comment.substring(0, 247)}...\"`\r\n                  }\r\n                  {!showFullComment && selectedComment.comment.length > 250 && (\r\n                    <button onClick={handleShowMore}>Show more</button>\r\n                  )}\r\n                </p>\r\n                <div className=\"draft-reply-container\">\r\n                  <div className=\"draft-reply-header\">\r\n                    {/* <img src=\"/Assets/def_pfp.jpg\" alt=\"Reply Icon\" /> */}\r\n                    <span>Your reply draft:</span>\r\n                  </div>\r\n                  <textarea\r\n                    value={draftReply}\r\n                    onChange={handleDraftChange}\r\n                    placeholder=\"Type your reply...\"\r\n                  />\r\n                  <div className=\"draft-reply-actions\">\r\n                    <button className=\"reject-button\" onClick={rejectReply}>Reject ✖</button>\r\n                    <button className=\"publish-button\" onClick={publishReply}>Publish ✈</button>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <p>Select a comment to view details</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <LoadingOverlay />} {/* Loading overlay */}\r\n      {activeCard ? (\r\n        <DetailScreen \r\n          activeCard={activeCard} \r\n          closeDetailScreen={closeDetailScreen} \r\n          fetchComments={fetchComments}\r\n          removeComment={removeComment}\r\n          rejectedComments={rejectedComments}\r\n          />\r\n      ) : (\r\n      <div className=\"card-container\">\r\n      <div className=\"refresh-button\">\r\n      <button \r\n        style={isLoading ? {backgroundColor: 'grey', cursor: 'not-allowed'} : {backgroundColor: 'red', cursor: 'pointer'}} \r\n        disabled={isButtonDisabled}\r\n        onClick={fetchMedia}\r\n      >\r\n          <span> Refresh feed </span>\r\n            <img src=\"/Assets/refresh_red.png\" className=\"reload\" />\r\n          </button>\r\n          <div className=\"tooltip\">\r\n                  <span className=\"tooltip-icon\">?</span>\r\n                  <span className=\"tooltip-text\">A process is a set of structured activities and tasks performed to achieve a specific goal.</span>\r\n          </div>\r\n      </div>\r\n        {limitedData.length > 0 ? limitedData.map((item, index) => (\r\n          <div key={item.id || index} className=\"card\">\r\n            {/* Card Header */}\r\n            <div className=\"card-header\">\r\n            <span className=\"counter-box\">\r\n            {item.comments.filter(comment => !rejectedComments.has(comment.id) && repliedComments.has(comment.id)).length}/\r\n            {item.comments.filter(comment => !rejectedComments.has(comment.id)).length}     \r\n            </span>\r\n              <h2> Comments replied </h2>\r\n              <button className=\"circle-button\" onClick={() => fetchComments(item.id, item.username)}>\r\n                <img src=\"/Assets/reload.png\" className=\"reload\" />\r\n              </button>\r\n            </div>\r\n            {/* Card Content */}\r\n            <div className=\"card-content\">\r\n              {/* Image on the left */}\r\n              <img src={item.imageUrl} alt=\"Post\" className=\"card-image\" />\r\n\r\n              {/* Text and Button on the right */}\r\n              <div className=\"card-text\">\r\n                <div>\r\n                  <h4>Post Date:</h4>\r\n                  <p className=\"card-date\">{item.date}</p>\r\n                </div>\r\n                \r\n                <button className=\"card-button\" onClick={() => handleCardButtonClick(item)}>\r\n                    Review {item.comments.filter(comment => !rejectedComments.has(comment.id)).length} Draft Replies >\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )) : (\r\n          <div className=\"empty-screen\">\r\n            <h1>No content!</h1>\r\n            <p>Your content will appear here when available.</p>\r\n            {/* <img src=\"/Assets/def_pfp.jpg\" alt=\"Descriptive Alt Text\" /> */}\r\n            <button onClick={fetchMedia}>Get Content</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}