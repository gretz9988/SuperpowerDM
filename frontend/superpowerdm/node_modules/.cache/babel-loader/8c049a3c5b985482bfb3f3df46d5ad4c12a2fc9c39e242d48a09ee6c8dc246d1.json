{"ast":null,"code":"import React,{useState}from'react';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";const defaultData=[];const CardComponent=_ref=>{let{maxCards}=_ref;const[data,setData]=useState(defaultData);const fetchMedia=async()=>{try{const response=await fetch('/fetch_media',{method:'POST',headers:{'Content-Type':'application/json'}});if(!response.ok){throw new Error(\"HTTP error! Status: \".concat(response.status));}const jsonData=await response.json();const transformedData=jsonData.map(item=>({imageUrl:item.media_url,// Assuming 'media_url' is the key you want\ndate:item.timestamp// Assuming 'timestamp' is the key you want\n}));// Append new data to the existing data state\nsetData(prevData=>[...prevData,...transformedData]);}catch(error){console.error('Error fetching media:',error);}};// Check if data is empty, and if so, use defaultData\nconst effectiveData=data.length===0?defaultData:data;// Determine the number of cards to display\nconst numCardsToShow=maxCards||effectiveData.length;// Slice the data to limit the number of cards if necessary\nconst limitedData=effectiveData.slice(0,numCardsToShow);// Render the component\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"card-container\",children:limitedData.length>0?limitedData.map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"counter-box\",children:[index+1,\"/\",limitedData.length]}),/*#__PURE__*/_jsx(\"h2\",{children:\" Comments replied \"}),/*#__PURE__*/_jsx(\"button\",{className:\"circle-button\",children:/*#__PURE__*/_jsx(\"img\",{src:\"/Assets/reload.png\",className:\"reload\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-content\",children:[/*#__PURE__*/_jsx(\"img\",{src:item.imageUrl,alt:\"Post\",className:\"card-image\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-text\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Post Date:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"card-date\",children:item.date})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"card-button\",children:[\"Review \",limitedData.length,\" Draft Replies >\"]})]})]})]},index)):/*#__PURE__*/_jsxs(\"div\",{className:\"empty-screen\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"No content!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Your content will appear here when available.\"}),/*#__PURE__*/_jsx(\"img\",{src:\"path_to_your_image.jpg\",alt:\"Descriptive Alt Text\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchMedia,children:\"Get Content\"})]})});};export default CardComponent;","map":{"version":3,"names":["React","useState","jsxs","_jsxs","jsx","_jsx","defaultData","CardComponent","_ref","maxCards","data","setData","fetchMedia","response","fetch","method","headers","ok","Error","concat","status","jsonData","json","transformedData","map","item","imageUrl","media_url","date","timestamp","prevData","error","console","effectiveData","length","numCardsToShow","limitedData","slice","className","children","index","src","alt","onClick"],"sources":["C:/Users/riadd/Documents/GitHub/SuperpowerDM/frontend/superpowerdm/src/Components/cards.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst defaultData = [];\r\n\r\nconst CardComponent = ({maxCards}) => {\r\n  const [data, setData] = useState(defaultData);\r\n\r\n  const fetchMedia = async () => {\r\n    try {\r\n      const response = await fetch('/fetch_media', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n\r\n      const jsonData = await response.json();\r\n      const transformedData = jsonData.map(item => ({\r\n        imageUrl: item.media_url,  // Assuming 'media_url' is the key you want\r\n        date: item.timestamp       // Assuming 'timestamp' is the key you want\r\n      }));\r\n\r\n      // Append new data to the existing data state\r\n      setData(prevData => [...prevData, ...transformedData]);\r\n    } catch (error) {\r\n      console.error('Error fetching media:', error);\r\n    }\r\n  };\r\n\r\n  // Check if data is empty, and if so, use defaultData\r\n  const effectiveData = data.length === 0 ? defaultData : data;\r\n\r\n  // Determine the number of cards to display\r\n  const numCardsToShow = maxCards || effectiveData.length;\r\n\r\n  // Slice the data to limit the number of cards if necessary\r\n  const limitedData = effectiveData.slice(0, numCardsToShow);\r\n\r\n  // Render the component\r\n  return (\r\n    <div className=\"card-container\">\r\n      {limitedData.length > 0 ? limitedData.map((item, index) => (\r\n        <div key={index} className=\"card\">\r\n          {/* Card Header */}\r\n          <div className=\"card-header\">\r\n            <span className=\"counter-box\">{index + 1}/{limitedData.length}</span> \r\n            <h2> Comments replied </h2>\r\n            <button className=\"circle-button\">\r\n              <img src=\"/Assets/reload.png\" className=\"reload\" />\r\n            </button>\r\n          </div>\r\n\r\n          {/* Card Content */}\r\n          <div className=\"card-content\">\r\n            {/* Image on the left */}\r\n            <img src={item.imageUrl} alt=\"Post\" className=\"card-image\" />\r\n\r\n            {/* Text and Button on the right */}\r\n            <div className=\"card-text\">\r\n              <div>\r\n                <h4>Post Date:</h4>\r\n                <p className=\"card-date\">{item.date}</p>\r\n              </div>\r\n              <button className=\"card-button\">Review {limitedData.length} Draft Replies ></button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )) : (\r\n        <div className=\"empty-screen\">\r\n          <h1>No content!</h1>\r\n          <p>Your content will appear here when available.</p>\r\n          <img src=\"path_to_your_image.jpg\" alt=\"Descriptive Alt Text\" />\r\n          <button onClick={fetchMedia}>Get Content</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}