{"ast":null,"code":"import React,{useState,useEffect}from'react';// const defaultData = [];\n// const defaultData = [\n//   {\n//     id: '1806821234567854',\n//     imageUrl: 'https://picsum.photos/id/237/1080/1080',\n//     date: '2023-12-09T21:35:36+0000',\n//     username: 'user1',\n//     comments: [\n//       { username: 'commenter1', comment: 'Great post!' },\n//       { username: 'commenter2', comment: 'Love this!' }\n//     ]\n//   },\n//   {\n//     id: '179887602982372',\n//     imageUrl: 'https://picsum.photos/id/7/1080/1920',\n//     date: '2023-12-09T21:32:54+0000',\n//     username: 'user2',\n//     comments: [\n//       { username: 'commenter3', comment: 'Amazing content!' },\n//       { username: 'commenter4', comment: 'Really nice picture.' }\n//     ]\n//   },\n//   {\n//     id: '17901198953067',\n//     imageUrl: 'https://picsum.photos/id/63/1080/1080',\n//     date: '2023-11-16T14:51:08+0000',\n//     username: 'user3',\n//     comments: [\n//       { username: 'commenter5', comment: 'This is awesome!' }\n//     ]\n//   },\n//   {\n//     id: '17987708884506',\n//     imageUrl: 'https://picsum.photos/id/16/1080/1920',\n//     date: '2023-11-03T16:16:05+0000',\n//     username: 'user4',\n//     comments: [\n//       { username: 'commenter1', comment: 'I like this post a lot.' },\n//       { username: 'commenter7', comment: 'Great job!' },\n//       { username: 'commenter8', comment: 'Very cool!' }\n//     ]\n//   },\n//   {\n//     id: '1823344558749012',\n//     imageUrl: 'https://picsum.photos/id/5/1080/1080',\n//     date: '2023-10-25T10:30:21+0000',\n//     username: 'user5',\n//     comments: [\n//       { username: 'commenter9', comment: 'Superb!' },\n//       { username: 'commenter10', comment: 'Inspiring work.' }\n//     ]\n//   },\n//   {\n//     id: '17651127890987654',\n//     imageUrl: 'https://picsum.photos/id/59/1080/1080',\n//     date: '2023-10-20T08:15:45+0000',\n//     username: 'user6',\n//     comments: [\n//       { username: 'commenter11', comment: 'Fantastic!' },\n//       { username: 'commenter12', comment: 'Wow, this is great!' }\n//     ]\n//   },\n//   {\n//     id: '176543677654',\n//     imageUrl: 'https://picsum.photos/id/59/1080/1080',\n//     date: '2023-10-20T08:15:45+0000',\n//     username: 'user6',\n//     comments: [\n//       { username: 'commenter11', comment: 'Fantastic!' },\n//       { username: 'commenter12', comment: 'Wow, this is great!' }\n//     ]\n//   },\n// ];\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const LoadingOverlay=()=>/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,width:'100%',height:'100%',backgroundColor:'rgba(0, 0, 0, 0.5)',display:'flex',justifyContent:'center',alignItems:'center',zIndex:1000// Ensure it's above everything else\n},children:/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'2rem',color:'white'},children:\"Loading...\"})});const CardComponent=_ref=>{let{maxCards}=_ref;const[data,setData]=useState(()=>{const savedData=localStorage.getItem('defaultData');return savedData?JSON.parse(savedData):defaultData;});const[isLoading,setIsLoading]=useState(false);const[displayedComments,setDisplayedComments]=useState({});const[rejectedComments,setRejectedComments]=useState(()=>{const savedRejectedComments=localStorage.getItem('rejectedComments');return savedRejectedComments?new Set(JSON.parse(savedRejectedComments)):new Set();});const[repliedComments,setRepliedComments]=useState(()=>{const savedRepliedComments=localStorage.getItem('repliedComments');return savedRepliedComments?new Set(JSON.parse(savedRepliedComments)):new Set();});const[activeCard,setActiveCard]=useState(null);const initializeCountdown=()=>{const disabledTime=localStorage.getItem('disabledTime');if(disabledTime){const now=new Date().getTime();const remainingTime=300-Math.floor((now-parseInt(disabledTime))/1000);return remainingTime>0?remainingTime:0;}return 0;};const[isButtonDisabled,setIsButtonDisabled]=useState(initializeCountdown()>0);const[countdown,setCountdown]=useState(initializeCountdown());useEffect(()=>{localStorage.setItem('defaultData',JSON.stringify(data));},[data]);useEffect(()=>{localStorage.setItem('rejectedComments',JSON.stringify(Array.from(rejectedComments)));},[rejectedComments]);useEffect(()=>{localStorage.setItem('repliedComments',JSON.stringify(Array.from(repliedComments)));},[repliedComments]);const fetchMedia=async()=>{setIsLoading(true);setIsButtonDisabled(true);try{// Start the fetch operation\nconst response=await fetch('/fetch_media',{method:'POST',headers:{'Content-Type':'application/json'}});if(!response.ok){throw new Error(\"HTTP error! Status: \".concat(response.status));}const jsonData=await response.json();setIsLoading(false);// Set loading to false as soon as the server responds\nsetIsButtonDisabled(false);const transformedData=jsonData.map(item=>({imageUrl:item.media_url,date:item.timestamp,id:item.id,username:item.username,comments:[],commentsFetched:false}));let updatedActiveCardExists=false;const updatedData=transformedData.map(newItem=>{const existingItem=data.find(oldItem=>oldItem.id===newItem.id);if(existingItem){if(activeCard&&activeCard.id===existingItem.id){updatedActiveCardExists=true;}return{...newItem,comments:existingItem.comments,commentsFetched:existingItem.commentsFetched};}return newItem;});setData(updatedData);if(!updatedActiveCardExists){setActiveCard(null);// Set active card to null if no previously active card exists in the updated data\n}}catch(error){console.error('Error fetching media:',error);}finally{setIsButtonDisabled(false);}};const fetchComments=async function(mediaId,username){let isActiveCard=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;try{const response=await fetch('/fetch_comments',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({media_id:mediaId,username:username})});if(!response.ok){throw new Error(\"HTTP error! Status: \".concat(response.status));}let newComments=await response.json();newComments=newComments.filter(comment=>!rejectedComments.has(comment.id)&&!repliedComments.has(comment.id));setData(prevData=>prevData.map(item=>{if(item.id===mediaId){const existingCommentIds=new Set(item.comments.map(c=>c.id));const filteredComments=newComments.filter(comment=>!existingCommentIds.has(comment.id));return{...item,comments:[...item.comments,...filteredComments]};}return item;}));if(isActiveCard){setActiveCard(prevActiveCard=>{if(prevActiveCard&&prevActiveCard.id===mediaId){return{...prevActiveCard,comments:newComments};}return prevActiveCard;});}}catch(error){console.error('Error fetching comments:',error);}};const removeComment=(mediaId,commentToRemove)=>{setRejectedComments(prev=>{const newSet=new Set([...prev,commentToRemove.id]);localStorage.setItem('rejectedComments',JSON.stringify(Array.from(newSet)));// Save to localStorage\nreturn newSet;});setData(prevData=>prevData.map(item=>{if(item.id===mediaId){const updatedComments=item.comments.filter(comment=>comment.id!==commentToRemove.id);return{...item,comments:updatedComments};}return item;}));};const handleCardButtonClick=async card=>{setIsLoading(true);// Start loading\ntry{if(card.comments&&card.comments.length>0){await submitComments(card.comments);// After submitComments, find the updated card in your state\nsetData(prevData=>{const updatedData=prevData.map(post=>{if(post.id===card.id){setActiveCard(post);// Set the updated card as active\nreturn{...post};}return post;});return updatedData;});}}catch(error){console.error('Error in handleCardButtonClick:',error);}finally{setIsLoading(false);// Stop loading\n}};const closeDetailScreen=()=>{setActiveCard(null);};const updateCommentsWithResponses=responseData=>{setData(prevData=>{const updatedData=prevData.map(post=>({...post,comments:post.comments.map(comment=>{const responseEntry=responseData.find(response=>response.id===comment.id);return responseEntry?{...comment,response:responseEntry.response}:comment;})}));console.log(\"Updated data with responses:\",updatedData);return updatedData;});};const submitComments=async comments=>{try{// Filter out comments that already have a response\nconst commentsWithoutResponse=comments.filter(comment=>!comment.response);if(commentsWithoutResponse.length===0){console.log(\"No new comments to process\");return;}// Prepare the payload: include both comment text and id\nconst payload=commentsWithoutResponse.map(comment=>({id:comment.id,comment:comment.comment}));const response=await fetch('/submit_comments',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});if(!response.ok){throw new Error(\"HTTP error! Status: \".concat(response.status));}const responseData=await response.json();updateCommentsWithResponses(responseData);}catch(error){console.error('Error submitting comments:',error);}};// Check if data is empty, and if so, use defaultData\nconst effectiveData=data.length===0?defaultData:data;// Determine the number of cards to display\nconst numCardsToShow=maxCards||effectiveData.length;// Slice the data to limit the number of cards if necessary\nconst limitedData=effectiveData.slice(0,numCardsToShow);const DetailScreen=_ref2=>{let{activeCard,closeDetailScreen,fetchComments,removeComment,rejectedComments}=_ref2;const[selectedComment,setSelectedComment]=useState(null);const[showFullComment,setShowFullComment]=useState(false);const[draftReply,setDraftReply]=useState(\"\");const[generatedResponse,setGeneratedResponse]=useState(\"\");const isCommentRejected=comment=>rejectedComments.has(comment.id);const selectComment=comment=>{setSelectedComment(comment);setShowFullComment(false);setDraftReply(comment.response||\"\");};const refreshComments=async()=>{if(activeCard){await fetchComments(activeCard.id,activeCard.username);// After fetching new comments, check if the previously selected comment still exists\nif(selectedComment){const updatedComment=activeCard.comments.find(comment=>comment.id===selectedComment.id);if(updatedComment){setSelectedComment(updatedComment);// Reselect the comment if it exists\n}else{setSelectedComment(null);// Deselect if the comment no longer exists\n}}}};const handleShowMore=()=>{setShowFullComment(true);};const handleDraftChange=e=>{setDraftReply(e.target.value);};const rejectReply=()=>{if(selectedComment&&activeCard){setRejectedComments(prev=>new Set([...prev,selectedComment.id]));removeComment(activeCard.id,selectedComment);setSelectedComment(null);// Reset selected comment\n}};const publishReply=async()=>{console.log(\"Publishing reply:\",draftReply);if(!selectedComment){console.error(\"No comment selected\");return;}// UI update before server response (optimistic update)\nconst optimisticUpdatedComments=activeCard.comments.filter(comment=>comment.id!==selectedComment.id);setActiveCard({...activeCard,comments:optimisticUpdatedComments});setData(prevData=>prevData.map(item=>{if(item.id===activeCard.id){return{...item,comments:optimisticUpdatedComments};}return item;}));const payload={commentId:selectedComment.id,reply:draftReply};try{const response=await fetch('/publish_reply',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});if(!response.ok){throw new Error(\"HTTP error! Status: \".concat(response.status));}// Server confirmed, update the replied comments set\nconst responseData=await response.json();console.log(\"Reply published:\",responseData);setRepliedComments(prev=>{const newSet=new Set([...prev,selectedComment.id]);localStorage.setItem('repliedComments',JSON.stringify(Array.from(newSet)));return newSet;});setSelectedComment(null);setDraftReply(\"\");}catch(error){console.error('Error publishing reply:',error);// Revert UI changes if there was an error\nsetActiveCard({...activeCard,comments:[...activeCard.comments,selectedComment]});setData(prevData=>prevData.map(item=>{if(item.id===activeCard.id){return{...item,comments:[...item.comments,selectedComment]};}return item;}));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"detail-screen\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comment-header\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Post from \",activeCard.date]}),/*#__PURE__*/_jsxs(\"div\",{className:\"post-image-container\",children:[/*#__PURE__*/_jsx(\"img\",{src:activeCard.imageUrl,alt:\"Post\",className:\"post-image\"}),/*#__PURE__*/_jsx(\"div\",{className:\"post-image-text\",children:\"Some text next to the image\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"comment-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comment-counter\",children:[activeCard.comments.filter(comment=>!rejectedComments.has(comment.id)&&repliedComments.has(comment.id)).length,\"/\",activeCard.comments.filter(comment=>!rejectedComments.has(comment.id)).length,\" comments replied to\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"circle-button\",onClick:refreshComments,children:/*#__PURE__*/_jsx(\"img\",{src:\"/Assets/reload.png\",className:\"reload\",alt:\"Close\"})})]}),/*#__PURE__*/_jsx(\"button\",{className:\"circle-button\",onClick:closeDetailScreen,children:\"X\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"content-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comments-list\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Comments\"}),activeCard.comments.filter(comment=>!isCommentRejected(comment)).filter(comment=>!rejectedComments.has(comment.id))// potential error line\n.map((comment,index)=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"comment-item \".concat(selectedComment===comment?'highlighted':''),onClick:()=>selectComment(comment),children:[/*#__PURE__*/_jsx(\"img\",{src:comment.userImage,alt:\"User\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"comment-username\",children:[\"@\",comment.username]}),/*#__PURE__*/_jsx(\"div\",{className:\"separator\",children:\"| \"}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-text\",children:comment.comment})]},index);})]}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-detail\",children:selectedComment?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comment-detail-header\",children:[/*#__PURE__*/_jsx(\"img\",{src:selectedComment.userImage,alt:\"User\",className:\"comment-user-image\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"@\",selectedComment.username]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-detail-title\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Commented:\"})}),/*#__PURE__*/_jsxs(\"p\",{className:\"comment-text\",children:[showFullComment||selectedComment.comment.length<=250?\"\\\"\".concat(selectedComment.comment,\"\\\"\"):\"\\\"\".concat(selectedComment.comment.substring(0,247),\"...\\\"\"),!showFullComment&&selectedComment.comment.length>250&&/*#__PURE__*/_jsx(\"button\",{onClick:handleShowMore,children:\"Show more\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"draft-reply-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"draft-reply-header\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Your reply draft:\"})}),/*#__PURE__*/_jsx(\"textarea\",{value:draftReply,onChange:handleDraftChange,placeholder:\"Type your reply...\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"draft-reply-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"reject-button\",onClick:rejectReply,children:\"Reject \\u2716\"}),/*#__PURE__*/_jsx(\"button\",{className:\"publish-button\",onClick:publishReply,children:\"Publish \\u2708\"})]})]})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Select a comment to view details\"})})]})]});};return/*#__PURE__*/_jsxs(\"div\",{children:[isLoading&&/*#__PURE__*/_jsx(LoadingOverlay,{}),\" \",activeCard?/*#__PURE__*/_jsx(DetailScreen,{activeCard:activeCard,closeDetailScreen:closeDetailScreen,fetchComments:fetchComments,removeComment:removeComment,rejectedComments:rejectedComments}):/*#__PURE__*/_jsxs(\"div\",{className:\"card-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"refresh-button\",children:[/*#__PURE__*/_jsxs(\"button\",{style:isLoading?{backgroundColor:'grey',cursor:'not-allowed'}:{backgroundColor:'red',cursor:'pointer'},disabled:isButtonDisabled,onClick:fetchMedia,children:[/*#__PURE__*/_jsx(\"span\",{children:\" Refresh feed \"}),/*#__PURE__*/_jsx(\"img\",{src:\"/Assets/refresh_red.png\",className:\"reload\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tooltip\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"tooltip-icon\",children:\"?\"}),/*#__PURE__*/_jsx(\"span\",{className:\"tooltip-text\",children:\"A process is a set of structured activities and tasks performed to achieve a specific goal.\"})]})]}),limitedData.length>0?limitedData.map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"counter-box\",children:[item.comments.filter(comment=>!rejectedComments.has(comment.id)&&repliedComments.has(comment.id)).length,\"/\",item.comments.filter(comment=>!rejectedComments.has(comment.id)).length]}),/*#__PURE__*/_jsx(\"h2\",{children:\" Comments replied \"}),/*#__PURE__*/_jsx(\"button\",{className:\"circle-button\",onClick:()=>fetchComments(item.id,item.username),children:/*#__PURE__*/_jsx(\"img\",{src:\"/Assets/reload.png\",className:\"reload\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-content\",children:[/*#__PURE__*/_jsx(\"img\",{src:item.imageUrl,alt:\"Post\",className:\"card-image\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-text\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Post Date:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"card-date\",children:item.date})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"card-button\",onClick:()=>handleCardButtonClick(item),children:[\"Review \",item.comments.filter(comment=>!rejectedComments.has(comment.id)).length,\" Draft Replies >\"]})]})]})]},item.id||index)):/*#__PURE__*/_jsxs(\"div\",{className:\"empty-screen\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"No content!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Your content will appear here when available.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchMedia,children:\"Get Content\"})]})]})]});};export default CardComponent;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","LoadingOverlay","style","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","children","fontSize","color","CardComponent","_ref","maxCards","data","setData","savedData","localStorage","getItem","JSON","parse","defaultData","isLoading","setIsLoading","displayedComments","setDisplayedComments","rejectedComments","setRejectedComments","savedRejectedComments","Set","repliedComments","setRepliedComments","savedRepliedComments","activeCard","setActiveCard","initializeCountdown","disabledTime","now","Date","getTime","remainingTime","Math","floor","parseInt","isButtonDisabled","setIsButtonDisabled","countdown","setCountdown","setItem","stringify","Array","from","fetchMedia","response","fetch","method","headers","ok","Error","concat","status","jsonData","json","transformedData","map","item","imageUrl","media_url","date","timestamp","id","username","comments","commentsFetched","updatedActiveCardExists","updatedData","newItem","existingItem","find","oldItem","error","console","fetchComments","mediaId","isActiveCard","arguments","length","undefined","body","media_id","newComments","filter","comment","has","prevData","existingCommentIds","c","filteredComments","prevActiveCard","removeComment","commentToRemove","prev","newSet","updatedComments","handleCardButtonClick","card","submitComments","post","closeDetailScreen","updateCommentsWithResponses","responseData","responseEntry","log","commentsWithoutResponse","payload","effectiveData","numCardsToShow","limitedData","slice","DetailScreen","_ref2","selectedComment","setSelectedComment","showFullComment","setShowFullComment","draftReply","setDraftReply","generatedResponse","setGeneratedResponse","isCommentRejected","selectComment","refreshComments","updatedComment","handleShowMore","handleDraftChange","e","target","value","rejectReply","publishReply","optimisticUpdatedComments","commentId","reply","className","src","alt","onClick","index","userImage","substring","onChange","placeholder","cursor","disabled"],"sources":["C:/Users/riadd/Documents/GitHub/SuperpowerDM/frontend/superpowerdm/src/Components/cards.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// const defaultData = [];\r\n\r\n// const defaultData = [\r\n//   {\r\n//     id: '1806821234567854',\r\n//     imageUrl: 'https://picsum.photos/id/237/1080/1080',\r\n//     date: '2023-12-09T21:35:36+0000',\r\n//     username: 'user1',\r\n//     comments: [\r\n//       { username: 'commenter1', comment: 'Great post!' },\r\n//       { username: 'commenter2', comment: 'Love this!' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: '179887602982372',\r\n//     imageUrl: 'https://picsum.photos/id/7/1080/1920',\r\n//     date: '2023-12-09T21:32:54+0000',\r\n//     username: 'user2',\r\n//     comments: [\r\n//       { username: 'commenter3', comment: 'Amazing content!' },\r\n//       { username: 'commenter4', comment: 'Really nice picture.' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: '17901198953067',\r\n//     imageUrl: 'https://picsum.photos/id/63/1080/1080',\r\n//     date: '2023-11-16T14:51:08+0000',\r\n//     username: 'user3',\r\n//     comments: [\r\n//       { username: 'commenter5', comment: 'This is awesome!' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: '17987708884506',\r\n//     imageUrl: 'https://picsum.photos/id/16/1080/1920',\r\n//     date: '2023-11-03T16:16:05+0000',\r\n//     username: 'user4',\r\n//     comments: [\r\n//       { username: 'commenter1', comment: 'I like this post a lot.' },\r\n//       { username: 'commenter7', comment: 'Great job!' },\r\n//       { username: 'commenter8', comment: 'Very cool!' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: '1823344558749012',\r\n//     imageUrl: 'https://picsum.photos/id/5/1080/1080',\r\n//     date: '2023-10-25T10:30:21+0000',\r\n//     username: 'user5',\r\n//     comments: [\r\n//       { username: 'commenter9', comment: 'Superb!' },\r\n//       { username: 'commenter10', comment: 'Inspiring work.' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: '17651127890987654',\r\n//     imageUrl: 'https://picsum.photos/id/59/1080/1080',\r\n//     date: '2023-10-20T08:15:45+0000',\r\n//     username: 'user6',\r\n//     comments: [\r\n//       { username: 'commenter11', comment: 'Fantastic!' },\r\n//       { username: 'commenter12', comment: 'Wow, this is great!' }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: '176543677654',\r\n//     imageUrl: 'https://picsum.photos/id/59/1080/1080',\r\n//     date: '2023-10-20T08:15:45+0000',\r\n//     username: 'user6',\r\n//     comments: [\r\n//       { username: 'commenter11', comment: 'Fantastic!' },\r\n//       { username: 'commenter12', comment: 'Wow, this is great!' }\r\n//     ]\r\n//   },\r\n// ];\r\n\r\nconst LoadingOverlay = () => (\r\n  <div style={{\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    zIndex: 1000 // Ensure it's above everything else\r\n  }}>\r\n    <div style={{ fontSize: '2rem', color: 'white' }}>Loading...</div>\r\n  </div>\r\n);\r\n\r\nconst CardComponent = ({maxCards}) => {\r\n  const [data, setData] = useState(() => {\r\n    const savedData = localStorage.getItem('defaultData');\r\n    return savedData ? JSON.parse(savedData) : defaultData;\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [displayedComments, setDisplayedComments] = useState({});\r\n  const [rejectedComments, setRejectedComments] = useState(() => {\r\n    const savedRejectedComments = localStorage.getItem('rejectedComments');\r\n    return savedRejectedComments ? new Set(JSON.parse(savedRejectedComments)) : new Set();\r\n  });\r\n  const [repliedComments, setRepliedComments] = useState(() => {\r\n    const savedRepliedComments = localStorage.getItem('repliedComments');\r\n    return savedRepliedComments ? new Set(JSON.parse(savedRepliedComments)) : new Set();\r\n  });\r\n  const [activeCard, setActiveCard] = useState(null);\r\n\r\n  const initializeCountdown = () => {\r\n    const disabledTime = localStorage.getItem('disabledTime');\r\n    if (disabledTime) {\r\n      const now = new Date().getTime();\r\n      const remainingTime = 300 - Math.floor((now - parseInt(disabledTime)) / 1000);\r\n      return remainingTime > 0 ? remainingTime : 0;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(initializeCountdown() > 0);\r\n  const [countdown, setCountdown] = useState(initializeCountdown());\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('defaultData', JSON.stringify(data));\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('rejectedComments', JSON.stringify(Array.from(rejectedComments)));\r\n  }, [rejectedComments]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('repliedComments', JSON.stringify(Array.from(repliedComments)));\r\n  }, [repliedComments]);\r\n\r\n  const fetchMedia = async () => {\r\n    setIsLoading(true);\r\n    setIsButtonDisabled(true);\r\n\r\n    try {\r\n      // Start the fetch operation\r\n      const response = await fetch('/fetch_media', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n\r\n      const jsonData = await response.json();\r\n      setIsLoading(false); // Set loading to false as soon as the server responds\r\n      setIsButtonDisabled(false);\r\n\r\n      const transformedData = jsonData.map(item => ({\r\n        imageUrl: item.media_url,\r\n        date: item.timestamp,\r\n        id: item.id,\r\n        username: item.username,\r\n        comments: [],\r\n        commentsFetched: false\r\n      }));\r\n\r\n      let updatedActiveCardExists = false;\r\n      const updatedData = transformedData.map(newItem => {\r\n        const existingItem = data.find(oldItem => oldItem.id === newItem.id);\r\n        if (existingItem) {\r\n          if (activeCard && activeCard.id === existingItem.id) {\r\n            updatedActiveCardExists = true;\r\n          }\r\n          return { ...newItem, comments: existingItem.comments, commentsFetched: existingItem.commentsFetched };\r\n        }\r\n        return newItem;\r\n      });\r\n\r\n      setData(updatedData);\r\n      if (!updatedActiveCardExists) {\r\n        setActiveCard(null); // Set active card to null if no previously active card exists in the updated data\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching media:', error);\r\n    } finally {\r\n      setIsButtonDisabled(false);\r\n    }\r\n  };\r\n\r\n\r\n  const fetchComments = async (mediaId, username, isActiveCard = false) => {\r\n    try {\r\n      const response = await fetch('/fetch_comments', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ media_id: mediaId, username: username })\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n  \r\n      let newComments = await response.json();\r\n      newComments = newComments.filter(comment => \r\n        !rejectedComments.has(comment.id) && !repliedComments.has(comment.id)\r\n      );\r\n  \r\n      setData(prevData => prevData.map(item => {\r\n        if (item.id === mediaId) {\r\n          const existingCommentIds = new Set(item.comments.map(c => c.id));\r\n          const filteredComments = newComments.filter(comment => !existingCommentIds.has(comment.id));\r\n          return { ...item, comments: [...item.comments, ...filteredComments] };\r\n        }\r\n        return item;\r\n      }));\r\n  \r\n      if (isActiveCard) {\r\n        setActiveCard(prevActiveCard => {\r\n          if (prevActiveCard && prevActiveCard.id === mediaId) {\r\n            return { ...prevActiveCard, comments: newComments };\r\n          }\r\n          return prevActiveCard;\r\n        });\r\n      }\r\n  \r\n    } catch (error) {\r\n      console.error('Error fetching comments:', error);\r\n    }\r\n  };  \r\n  \r\n\r\n  const removeComment = (mediaId, commentToRemove) => {\r\n    setRejectedComments(prev => {\r\n      const newSet = new Set([...prev, commentToRemove.id]);\r\n      localStorage.setItem('rejectedComments', JSON.stringify(Array.from(newSet))); // Save to localStorage\r\n      return newSet;\r\n    });\r\n  \r\n    setData(prevData => prevData.map(item => {\r\n      if (item.id === mediaId) {\r\n        const updatedComments = item.comments.filter(comment => comment.id !== commentToRemove.id);\r\n        return { ...item, comments: updatedComments };\r\n      }\r\n      return item;\r\n    }));\r\n  }; \r\n\r\n  const handleCardButtonClick = async (card) => {\r\n    setIsLoading(true); // Start loading\r\n  \r\n    try {\r\n      if (card.comments && card.comments.length > 0) {\r\n        await submitComments(card.comments);\r\n  \r\n        // After submitComments, find the updated card in your state\r\n        setData(prevData => {\r\n          const updatedData = prevData.map(post => {\r\n            if (post.id === card.id) {\r\n              setActiveCard(post); // Set the updated card as active\r\n              return { ...post };\r\n            }\r\n            return post;\r\n          });\r\n          return updatedData;\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in handleCardButtonClick:', error);\r\n    } finally {\r\n      setIsLoading(false); // Stop loading\r\n    }\r\n  };\r\n  \r\n    \r\n\r\n  const closeDetailScreen = () => {\r\n    setActiveCard(null);\r\n  };\r\n\r\n  const updateCommentsWithResponses = (responseData) => {\r\n    setData(prevData => {\r\n      const updatedData = prevData.map(post => ({\r\n        ...post,\r\n        comments: post.comments.map(comment => {\r\n          const responseEntry = responseData.find(response => response.id === comment.id);\r\n          return responseEntry \r\n            ? { ...comment, response: responseEntry.response }\r\n            : comment;\r\n        })\r\n      }));\r\n      console.log(\"Updated data with responses:\", updatedData);\r\n      return updatedData;\r\n    });\r\n  };\r\n  \r\n\r\n  const submitComments = async (comments) => {\r\n    try {\r\n      // Filter out comments that already have a response\r\n      const commentsWithoutResponse = comments.filter(comment => !comment.response);\r\n  \r\n      if (commentsWithoutResponse.length === 0) {\r\n        console.log(\"No new comments to process\");\r\n        return;\r\n      }\r\n  \r\n      // Prepare the payload: include both comment text and id\r\n      const payload = commentsWithoutResponse.map(comment => ({\r\n        id: comment.id,\r\n        comment: comment.comment\r\n      }));\r\n  \r\n      const response = await fetch('/submit_comments', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n  \r\n      const responseData = await response.json();\r\n      updateCommentsWithResponses(responseData);\r\n\r\n  \r\n    } catch (error) {\r\n      console.error('Error submitting comments:', error);\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n  // Check if data is empty, and if so, use defaultData\r\n  const effectiveData = data.length === 0 ? defaultData : data;\r\n  // Determine the number of cards to display\r\n  const numCardsToShow = maxCards || effectiveData.length;\r\n  // Slice the data to limit the number of cards if necessary\r\n  const limitedData = effectiveData.slice(0, numCardsToShow);\r\n\r\n  const DetailScreen = ({ activeCard, closeDetailScreen, fetchComments, removeComment, rejectedComments }) => {\r\n    const [selectedComment, setSelectedComment] = useState(null);\r\n    const [showFullComment, setShowFullComment] = useState(false);\r\n    const [draftReply, setDraftReply] = useState(\"\");\r\n    const [generatedResponse, setGeneratedResponse] = useState(\"\");\r\n    const isCommentRejected = (comment) => rejectedComments.has(comment.id);\r\n\r\n    const selectComment = (comment) => {\r\n      setSelectedComment(comment);\r\n      setShowFullComment(false);\r\n      setDraftReply(comment.response || \"\");\r\n    };\r\n    \r\n    const refreshComments = async () => {\r\n      if (activeCard) {\r\n        await fetchComments(activeCard.id, activeCard.username);\r\n    \r\n        // After fetching new comments, check if the previously selected comment still exists\r\n        if (selectedComment) {\r\n          const updatedComment = activeCard.comments.find(comment => comment.id === selectedComment.id);\r\n          if (updatedComment) {\r\n            setSelectedComment(updatedComment); // Reselect the comment if it exists\r\n          } else {\r\n            setSelectedComment(null); // Deselect if the comment no longer exists\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    const handleShowMore = () => {\r\n      setShowFullComment(true);\r\n    };\r\n  \r\n    const handleDraftChange = (e) => {\r\n      setDraftReply(e.target.value);\r\n    };\r\n  \r\n    const rejectReply = () => {\r\n      if (selectedComment && activeCard) {\r\n        setRejectedComments(prev => new Set([...prev, selectedComment.id]));\r\n        removeComment(activeCard.id, selectedComment);\r\n        setSelectedComment(null); // Reset selected comment\r\n      }\r\n    };    \r\n\r\n    const publishReply = async () => {\r\n  console.log(\"Publishing reply:\", draftReply);\r\n\r\n  if (!selectedComment) {\r\n    console.error(\"No comment selected\");\r\n    return;\r\n  }\r\n\r\n  // UI update before server response (optimistic update)\r\n  const optimisticUpdatedComments = activeCard.comments.filter(comment => comment.id !== selectedComment.id);\r\n  setActiveCard({...activeCard, comments: optimisticUpdatedComments});\r\n\r\n  setData(prevData => prevData.map(item => {\r\n    if (item.id === activeCard.id) {\r\n      return { ...item, comments: optimisticUpdatedComments };\r\n    }\r\n    return item;\r\n  }));\r\n\r\n  const payload = {\r\n    commentId: selectedComment.id,\r\n    reply: draftReply\r\n  };\r\n\r\n  try {\r\n    const response = await fetch('/publish_reply', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(payload),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n\r\n    // Server confirmed, update the replied comments set\r\n    const responseData = await response.json();\r\n    console.log(\"Reply published:\", responseData);\r\n\r\n    setRepliedComments(prev => {\r\n      const newSet = new Set([...prev, selectedComment.id]);\r\n      localStorage.setItem('repliedComments', JSON.stringify(Array.from(newSet)));\r\n      return newSet;\r\n    });\r\n    \r\n    setSelectedComment(null);\r\n    setDraftReply(\"\");\r\n\r\n  } catch (error) {\r\n    console.error('Error publishing reply:', error);\r\n    // Revert UI changes if there was an error\r\n    setActiveCard({...activeCard, comments: [...activeCard.comments, selectedComment]});\r\n    setData(prevData => prevData.map(item => {\r\n      if (item.id === activeCard.id) {\r\n        return { ...item, comments: [...item.comments, selectedComment] };\r\n      }\r\n      return item;\r\n    }));\r\n  }\r\n};\r\n    \r\n  \r\n    return (\r\n      <div className=\"detail-screen\">\r\n        <div className=\"comment-header\">\r\n          <h2>Post from {activeCard.date}</h2>\r\n          <div className=\"post-image-container\">\r\n            <img src={activeCard.imageUrl} alt=\"Post\" className=\"post-image\" />\r\n            <div className=\"post-image-text\">Some text next to the image</div>\r\n          </div>\r\n          <div className=\"comment-info\">\r\n            <div className=\"comment-counter\">{activeCard.comments.filter(comment => !rejectedComments.has(comment.id) && repliedComments.has(comment.id)).length}/{activeCard.comments.filter(comment => !rejectedComments.has(comment.id)).length} comments replied to\r\n             </div>\r\n            <button className=\"circle-button\" onClick={refreshComments}>\r\n              <img src=\"/Assets/reload.png\" className=\"reload\" alt=\"Close\" />\r\n            </button>\r\n          </div>\r\n          <button className=\"circle-button\" onClick={closeDetailScreen}>X</button>\r\n        </div>\r\n        <div className=\"content-body\">\r\n        <div className=\"comments-list\">\r\n          <h3>Comments</h3>\r\n          {activeCard.comments\r\n          .filter(comment => !isCommentRejected(comment))\r\n            .filter(comment => !rejectedComments.has(comment.id)) // potential error line\r\n            .map((comment, index) => {\r\n            return (\r\n              <div key={index} className={`comment-item ${selectedComment === comment ? 'highlighted' : ''}`}\r\n                  onClick={() => selectComment(comment)}>\r\n                <img src={comment.userImage} alt=\"User\" />\r\n                <div className=\"comment-username\">@{comment.username}</div>\r\n                <div className=\"separator\">| </div>\r\n                <div className=\"comment-text\">{comment.comment}</div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n          <div className=\"comment-detail\">\r\n            {selectedComment ? (\r\n                <>\r\n                <div className=\"comment-detail-header\">\r\n                  <img src={selectedComment.userImage} alt=\"User\" className=\"comment-user-image\" />\r\n                  <span>@{selectedComment.username}</span>\r\n                </div>\r\n                <div className=\"comment-detail-title\">\r\n                  <h2>Commented:</h2>\r\n                </div>\r\n                <p className=\"comment-text\">\r\n                {showFullComment || (selectedComment.comment.length <= 250)\r\n                    ? `\"${selectedComment.comment}\"`\r\n                    : `\"${selectedComment.comment.substring(0, 247)}...\"`\r\n                  }\r\n                  {!showFullComment && selectedComment.comment.length > 250 && (\r\n                    <button onClick={handleShowMore}>Show more</button>\r\n                  )}\r\n                </p>\r\n                <div className=\"draft-reply-container\">\r\n                  <div className=\"draft-reply-header\">\r\n                    {/* <img src=\"/Assets/def_pfp.jpg\" alt=\"Reply Icon\" /> */}\r\n                    <span>Your reply draft:</span>\r\n                  </div>\r\n                  <textarea\r\n                    value={draftReply}\r\n                    onChange={handleDraftChange}\r\n                    placeholder=\"Type your reply...\"\r\n                  />\r\n                  <div className=\"draft-reply-actions\">\r\n                    <button className=\"reject-button\" onClick={rejectReply}>Reject ✖</button>\r\n                    <button className=\"publish-button\" onClick={publishReply}>Publish ✈</button>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <p>Select a comment to view details</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <LoadingOverlay />} {/* Loading overlay */}\r\n      {activeCard ? (\r\n        <DetailScreen \r\n          activeCard={activeCard} \r\n          closeDetailScreen={closeDetailScreen} \r\n          fetchComments={fetchComments}\r\n          removeComment={removeComment}\r\n          rejectedComments={rejectedComments}\r\n          />\r\n      ) : (\r\n      <div className=\"card-container\">\r\n      <div className=\"refresh-button\">\r\n      <button \r\n        style={isLoading ? {backgroundColor: 'grey', cursor: 'not-allowed'} : {backgroundColor: 'red', cursor: 'pointer'}} \r\n        disabled={isButtonDisabled}\r\n        onClick={fetchMedia}\r\n      >\r\n          <span> Refresh feed </span>\r\n            <img src=\"/Assets/refresh_red.png\" className=\"reload\" />\r\n          </button>\r\n          <div className=\"tooltip\">\r\n                  <span className=\"tooltip-icon\">?</span>\r\n                  <span className=\"tooltip-text\">A process is a set of structured activities and tasks performed to achieve a specific goal.</span>\r\n          </div>\r\n      </div>\r\n        {limitedData.length > 0 ? limitedData.map((item, index) => (\r\n          <div key={item.id || index} className=\"card\">\r\n            {/* Card Header */}\r\n            <div className=\"card-header\">\r\n            <span className=\"counter-box\">\r\n            {item.comments.filter(comment => !rejectedComments.has(comment.id) && repliedComments.has(comment.id)).length}/\r\n            {item.comments.filter(comment => !rejectedComments.has(comment.id)).length}     \r\n            </span>\r\n              <h2> Comments replied </h2>\r\n              <button className=\"circle-button\" onClick={() => fetchComments(item.id, item.username)}>\r\n                <img src=\"/Assets/reload.png\" className=\"reload\" />\r\n              </button>\r\n            </div>\r\n            {/* Card Content */}\r\n            <div className=\"card-content\">\r\n              {/* Image on the left */}\r\n              <img src={item.imageUrl} alt=\"Post\" className=\"card-image\" />\r\n\r\n              {/* Text and Button on the right */}\r\n              <div className=\"card-text\">\r\n                <div>\r\n                  <h4>Post Date:</h4>\r\n                  <p className=\"card-date\">{item.date}</p>\r\n                </div>\r\n                \r\n                <button className=\"card-button\" onClick={() => handleCardButtonClick(item)}>\r\n                    Review {item.comments.filter(comment => !rejectedComments.has(comment.id)).length} Draft Replies >\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )) : (\r\n          <div className=\"empty-screen\">\r\n            <h1>No content!</h1>\r\n            <p>Your content will appear here when available.</p>\r\n            {/* <img src=\"/Assets/def_pfp.jpg\" alt=\"Descriptive Alt Text\" /> */}\r\n            <button onClick={fetchMedia}>Get Content</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}